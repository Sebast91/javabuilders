<?xml version="1.0" encoding="utf-8"?><?workdir /media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/temp?>
<?path2project?>
<bookmap class="- map/map bookmap/bookmap " xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" ditaarch:DITAArchVersion="1.1" domains="(map mapgroup-d) (topic indexing-d)                             (topic xnal-d)" id="N10009" locktitle="yes" rev="0.3" toc="yes" xtrc="bookmap:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap"><booktitle class="- topic/title bookmap/booktitle " xtrc="booktitle:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap">
		<mainbooktitle class="- topic/ph bookmap/mainbooktitle " xtrc="mainbooktitle:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap">Swing JavaBuilder</mainbooktitle>
		<booktitlealt class="- topic/ph bookmap/booktitlealt " xtrc="booktitlealt:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap">Achieving maximum productivity with minimum code via declarative UIs</booktitlealt>
	 </booktitle><frontmatter class="- map/topicref bookmap/frontmatter " rev="0.3" toc="yes" xtrc="frontmatter:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap"><!--Start of imbed for swing/abstract.xml--><topic id="N20006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/abstract.dita" xtrc="topic:1" refclass="- map/topicref bookmap/bookabstract "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/abstract.dita" xtrc="title:1">Abstract</title><prolog class="- topic/prolog " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/abstract.dita" xtrc="prolog:1">
		<author class="- topic/author " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/abstract.dita" xtrc="author:1">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/abstract.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/abstract.dita" xtrc="section:1">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/abstract.dita" xtrc="title:2">Swing JavaBuilder : making Swing development productive</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/abstract.dita" xtrc="p:1">
			<q class="- topic/q " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/abstract.dita" xtrc="q:1">Just started on using the Swing JavaBuilder and i must say i like it.
Just replaced 170 rules of Java code with only 13 lines YAML</q>
			<i class="+ topic/ph hi-d/i " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/abstract.dita" xtrc="i:1">Comment posted the JavaBuilders forum</i>
			</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/abstract.dita" xtrc="p:2">The Swing JavaBuilder is a library whose sole goal is to
				maximize the productivity of a Swing developer.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/abstract.dita" xtrc="p:3">It's main goal is tackling all the Swing pain points, in
				particular the complexity and verbosity of the API and reducing it
				to the smallest amount of code possible.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/abstract.dita" xtrc="p:4">This is accomplished by moving all the boring gruntwork of
				Swing interface creation to an external YAML file, which has a
				1-to-1 match with a backing Java class (e.g. a JFrame or JPanel)
				that is built from that file. This allows to follow a pure MVC
				pattern where the YAML contains nothing but the view, while the Java
				class is (mostly) the controller.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/abstract.dita" xtrc="p:5">As an added bonus, the Swing JavaBuilder offers integrated
				support for data binding (using Beans Binding), input validation
				(using Apache Commons Validators), background task processing (using
				SwingWorker) and last but not least, an integrated layout management
				DSL built-on top of the amazing MigLayout layout manager</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/abstract.dita" xtrc="p:6">In essence, the Swing JavaBuilder is an aggregator of
				best-of-breed Swing solutions into one common, integrated toolkit
				that makes creating Swing user interfaces a breeze</p>
		</section>
		<note class="- topic/note " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/abstract.dita" xtrc="note:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/abstract.dita" xtrc="p:7"> YAML is a file format that is a superset of JSON. We will cover
				it in more detail in future chapters. It's very simple to
				understand, edit and maintain. It's main advantage over both XML and
				JSON is the lack of any opening or closing tags, since it implements
				hierarchical data relationships via whitespace indentation (similar
				to the Python programming language).</p>
		</note>
	</body></topic><!--Start of imbed for core/license.xml--><topic id="N30006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/license.dita" xtrc="topic:1" refclass="- map/topicref bookmap/notices "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/license.dita" xtrc="title:1">License</title><prolog class="- topic/prolog " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/license.dita" xtrc="prolog:1">
		<author class="- topic/author " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/license.dita" xtrc="author:1">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/license.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/license.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/license.dita" xtrc="p:1">All JavaBuilders code is released under the business-friendly Apache 2.0 license.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/license.dita" xtrc="p:2">It is free to use in all projects, both open source and commercial.</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/license.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/license.dita" xtrc="title:2">Third party libraries</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/license.dita" xtrc="p:3">The Swing JavaBuilder depends on a number of well known open-source components,
			all of which are released under business-friendly licenses such as BSD, Apache or LGPL.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/license.dita" xtrc="p:4">We never link to any open source components released under viral licenses such as GPL.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/license.dita" xtrc="p:5">Nevertheless, please make sure to evaluate each third party license with your
			legal team to ensure compliance with its terms.</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" xtrc="bookabstract:1" mapkeyref="swing.javabuilder"/><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" xtrc="notices:1" mapkeyref="swing.javabuilder"/></related-links></topic><!--Start of imbed for swing/preface.xml--><topic id="N40006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/preface.dita" xtrc="topic:1" refclass="- map/topicref bookmap/preface "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/preface.dita" xtrc="title:1">Preface</title><prolog class="- topic/prolog " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/preface.dita" xtrc="prolog:1">
		<author class="- topic/author " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/preface.dita" xtrc="author:1">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/preface.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/preface.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/preface.dita" xtrc="p:1">In 2007 or so, Sun Microsystems announced their JavaFX project,
				which aimed to deliver declarative UIs and rich desktop
				functionality. Unfortunately, in what I've always believed to be a
				severely misguided decision, this was accomplished by introducing a
				totally new language, instead of enhancing the core Java abilities
				and the existing Swing UI toolkit.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/preface.dita" xtrc="p:2">I decided that there had to be a middle-of-the-road approach that
				could give Java UI developers the productivity of declarative UIs
				without the need to throw out their current language skills out and
				focus on an unproved and untested new language (whose
				features I wasn't particularly fond of anyway, but that's a
				different story).
			</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/preface.dita" xtrc="p:3">The JavaBuilders project was a result of this desire. It
				started off with many weeks of research and evaluation of different
				options. This resulted finally in the creation of a generic
				declarative UI based around the YAML format (which has many
				advantages over the XML or JSON formats) and the integration of many
				leading open source libraries (for features such as databinding or
				input validation) into one integrated solution.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/preface.dita" xtrc="p:4">The Swing JavaBuilder is the first production-ready
				implementation of the JavaBuilder engine, but it's generic nature
				allows it to be configured for other UI toolkits as well. In the
				future a SWT JavaBuilder is planned (and maybe even GTK+ and Qt
				versions as well).
			</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/preface.dita" xtrc="p:5">I hope its adoption by you and your team will greatly increase
				your productivity and ensure a long and healthy future for Java rich
				client development.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/preface.dita" xtrc="p:6">
				<b class="+ topic/ph hi-d/b " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/preface.dita" xtrc="b:1">Jacek Furmankiewicz</b>
			</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/preface.dita" xtrc="p:7">
				<i class="+ topic/ph hi-d/i " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/preface.dita" xtrc="i:1">JavaBuilders Technical Architect</i>
			</p>
		</section>
	</body></topic></frontmatter><chapter class="- map/topicref bookmap/chapter " rev="0.3" toc="yes" xtrc="chapter:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap"/><!--Start of imbed for swing/installing.xml--><topic id="N50006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/installing.dita" xtrc="topic:1" refclass="- map/topicref bookmap/chapter "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/installing.dita" xtrc="title:1">Installation</title><prolog class="- topic/prolog " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/installing.dita" xtrc="prolog:1">
		<author class="- topic/author " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/installing.dita" xtrc="author:1">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/installing.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/installing.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/installing.dita" xtrc="p:1">Start off with downloading the latest Swing JavaBuilder ZIP file distribution off
			the JavaBuilders.org website.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/installing.dita" xtrc="p:2">In the root folder you will find the Swing JavaBuilder jar and in the /lib
			folder you will find all of its dependencies. Add all of them to your project's
			classpath.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/installing.dita" xtrc="p:3">In the /samples folder you will find a sample application that you can use
			to get a better understanding of how you can build complex user interfaces
			using this library.</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" xtrc="preface:1" mapkeyref="swing.javabuilder"/><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" xtrc="chapter:2" mapkeyref="swing.javabuilder"/></related-links></topic><!--Start of imbed for core/overview.xml--><topic id="N60006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="topic:1" refclass="- map/topicref bookmap/chapter "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="title:1">Overview</title><prolog class="- topic/prolog "><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap">Jacek Furmankiewicz</author></prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="section:1">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="title:2">What is JavaBuilders all about?</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="p:1">
				In short any object that is built using a JavaBuilder consists of
				two files:
				<ul class="- topic/ul " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="ul:1">
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="li:1">
						a
						<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="apiname:1">YAML</apiname>
						text file that provides a declarative definition of the subject,
						most commonly the user interface. This would include items such as
						the controls that get instantiated, their properties, which
						methods should be called from event listeners, layout definition,
						data binding definition, predefined validations on controls or
						their properties.
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="li:2">
						a
						<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="apiname:2">Java</apiname>
						class with all the actual code that represents the object being
						built. So for example, in
						<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="apiname:3">Swing JavaBuilder</apiname>
						the Java class may be a
						<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="apiname:4">JFrame</apiname>
						with all the relevant methods (e.g.
						<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="codeph:1">save(), close(), validateInput()</codeph>
						, as well as public properties that refer to the data being
						entered/maintained in the window).
					</li>
				</ul>
			</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="p:2">
				Using a convention over configuration approach inspired by the
				Apache Wicket web framework, both files reside in the same package
				and with the same name, but just with a different file extension,
				e.g.:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="codeblock:1">
MainApplicationFrame.java
MainApplicationFrame.yaml
			</codeblock>
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="title:3">Why would I use this instead of regular coding by hand?
			</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="p:3">Because you will have to write a lot less code to the same
				thing if you use a JavaBuilder. This is what it's all about.</p>
		</section>
		<note class="- topic/note " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="note:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.dita" xtrc="p:4">The YAML file contains only a declaration of the interface,
				which methods (on the Java side) should be fired when the user
				pressed a button, data binding instructions, data validation
				definitions, etc. It has zero code (of any type, Java, Javascript,
				etc.) embedded in it. The idea is that 100% of actual code you write is in the Java file and nowhere else.</p>
		</note>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" xtrc="topicref:1" mapkeyref="swing.javabuilder"><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" xtrc="topicref:1"><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:2" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" href="#NB0006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:3" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" href="#NC0006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:4" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" href="#ND0006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:5" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" href="#NE0006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:6" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" href="#NF0006" role="child"/></linkpool></linkpool></related-links><!--Start of imbed for core/yaml.xml--><topic id="NB0006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="title:1">YAML</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="section:1">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="title:2">What is YAML?</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:1">
				I discovered YAML while reading about Ruby on Rails. It is used by
				that web framework as the default file format for all configuration
				files. It has a very simple approach to define hierarchical data
				structures/maps/list, based on straightforward whitespace
				indentation. Also, it handles text transparently. There is usually
				no need to input text in quotes, you can just type it as is, e.g.
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:1">text: This is the text for my control</codeblock>
				The only time you need to escape into quotes is if your text
				contains YAML-reserved characters such as ":", e.g.
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:2"> text: "First name:"</codeblock>
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="title:3">Whitespace indentation</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:2">Unless you are a Python programmer, the concept of anything
				that relies on whitespace probably makes you uncomfortable. Trust
				me, it's actually very simple to get used to it, does not require
				any particularly specialized development tools. The main benefit of
				whitespace indentation is that it automatically handles defining the
				"end" of an item (hence there is no need for XML-closing tags or
				JSON-closing brackets).</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="section:3">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="title:4">Why not XML?</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:3">It is simply too verbose. Too much typing. Most of the file
				seems to be tags and closing tags instead of the content. In YAML
				the majority of the file is the actual content (and the whitespace
				of course).</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="section:4">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="title:5">Why not JSON?</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:4">JSON is very concise and the perfect tool for let's say
				invoking Ajax requests. However, for maintainable files it suffers
				from what I call "closing bracket hell", especially when dealing
				with complex object graphs. Every type needs to be closed with a "}"
				and every collection needs to be opened and closed with a "[" and
				"]". Once you start mixing the two together you start having
				horrendous closing statements such as this:</p>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:3">              }
             }
            ]
           }
          ]
         }
        ]
       }
				</codeblock>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:5">Scroll to the bottom of this JavaFX code sample to see what
				I mean: http://jfx.wikia.com/wiki/JFXPresentation</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="section:5">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="title:6">YAML is a superset of JSON</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:6"> Although YAML relies on whitespace indentation to indicate
				hierarchy, you can at any point in the document switch to JSON-style
				brackets. This allows to keep the file shorter and more concise and
				should be used on all bottom-level nodes (i.e. those that have no
				children).</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:7">Pure whitespace YAML example:</p>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:4">
JFrame:
   name: myFrame
   title: My Frame
   content:
       - JLabel: 
           name: myLabel2
           text: My First Label
       - JLabel:
           name: myLabel2
           text: My Second Label				
			</codeblock>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:8">The same content can be compressed using JSON-style brackets
				to:</p>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:5">
JFrame:
   name: myFrame
   title: My Frame
   content:
       - JLabel: {name: myLabel2, text: My First Label}
       - JLabel: {name: myLabel2, text: My Second Label}			
			</codeblock>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:9">However, in most cases you will not be coding in either
				traditional YAML or JSON. We have enhanced the standard YAML syntax
				to make it even more compact (more on that in the next sections). In
				most cases your YAML content will look like this:</p>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:6">
JFrame(name=myFrame,title=My Frame):
    - JLabel(name=myLabel2, text=My First Label)
    - JLabel(name=myLabel2, text=My Second Label)			
			</codeblock>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:10">This is still valid YAML syntax and our custom YAML
				pre-processor takes care of "exploding" this compact syntax to the
				equivalent "full" YAML content</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="section:6">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="title:7">Tabs in YAML</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:11">Tabs are simply not allowed in YAML, period. You always indent
				using explicit whitespace. Putting a tab into a YAML file will cause
				it to fail to parse</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="section:7">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="title:8">YAML syntax samples</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:12">Values:</p>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:7"> text: Some text</codeblock>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:13">Maps:</p>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:8">
JFrame:
   name: myFrame
   title: My Frame			
			</codeblock>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:14">Lists (via the "-" indicator):</p>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:9">
    content:
        - Item1
        - Item2 : {somePropertyForItem2: someValueforItem2}			
			</codeblock>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:15">Free-form text with new lines preserved (accomplished
				with the "|" indicator):</p>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:10">
   quote: |
      To code by hand or not?
      There is no question.
      You should just be using JavaBuilders.
                   Will Shakespeare (JavaBuilders early adopter)			
			</codeblock>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="section:8">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="title:9">Related links</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:16">YAML on Wikipedia:
			<xref href="http://en.wikipedia.org/wiki/YAML" format="html" scope="external" class="- topic/xref " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="xref:1">http://en.wikipedia.org/wiki/YAML</xref>
			</p>
		</section>

	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" xtrc="topicref:2" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" href="#N60006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for core/yaml.compact.xml--><topic id="NC0006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="title:1">Compact YAML syntax</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="p:1">Although the base YAML format is already pretty concise,
				JavaBuilders adds a custom extension to it that we call "virtual
				constructor flow", otherwise referred to simply as compact YAML. It
				allows to specify the child properties of an object in the same line
				of text as the object definition.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="p:2">
				Here's a pure YAML example:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="codeblock:1">
JFrame:
   name: frame
   title: My Frame
   content:
       - JButton:
            name: buttonClose
            text: Close
            onAction: close
       - JButton:
            name: buttonSave
            text: Save
            onAction: save			
			</codeblock>
			</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="p:3">
				The same content can be entered in much less lines using our compact
				syntax:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="codeblock:2">
JFrame(name=frame,title=My Frame):
    - JButton(name=buttonClose,text=Close,onAction=close)
    - JButton(name=buttonSave,text=Save,onAction=save)			
			</codeblock>
				Let's be clear: this is not part of the official YAML standard. This
				is something specific to JavaBuilders that was added to make the
				YAML file even smaller.
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="title:2">Basic concepts</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="p:4">
				<ul class="- topic/ul " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="ul:1">
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="li:1">properties and their values are entered between ( and
						) on the same line as the object they refer to</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="li:2">
						instead of the default YAML
						<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="codeph:1">"name: value"</codeph>
						format it uses
						<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="codeph:2">"name=value"</codeph>
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="li:3">
						instead of the default YAML collection indicator
						<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="codeph:3">[</codeph>
						and
						<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="codeph:4">]</codeph>
						(e.g.
						<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="codeph:5">"list: [listItem1, listItem2]"</codeph>
						) it uses regular brackets, e.g.
						<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="codeph:6">"list=(listItem1,listItem2)"
						</codeph>
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="li:4">if an object has a collection of object defined directly
						underneath it, they automatically get moved to the default
						"content" node (just as in the example shown above)</li>
				</ul>
				<note class="- topic/note " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="note:1">
					<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.compact.dita" xtrc="p:5">All the code samples from this point will use the compact
						syntax, in order to promote its use.</p>
				</note>
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" xtrc="topicref:3" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" href="#N60006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for core/dev.tools.xml--><topic id="ND0006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/dev.tools.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/dev.tools.dita" xtrc="title:1">Development tools</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/dev.tools.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/dev.tools.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/dev.tools.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/dev.tools.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/dev.tools.dita" xtrc="p:1">
				JavaBuilders requires just any decent Java IDE with a YAML editor.
				Remember to select fixed width font (e.g.
				<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/dev.tools.dita" xtrc="codeph:1">Courier New, Monospaced</codeph>
				) for the editor, otherwise you will not be able to line up the
				spacing correctly in the file.
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/dev.tools.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/dev.tools.dita" xtrc="title:2">Eclipse</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/dev.tools.dita" xtrc="p:2">Eclipse YAML Editor: http://code.google.com/p/yamleditor/
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/dev.tools.dita" xtrc="section:3">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/dev.tools.dita" xtrc="title:3">NetBeans</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/dev.tools.dita" xtrc="p:3">As of NetBeans 6.5 a YAML editor is included in the core
				distribution.</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/dev.tools.dita" xtrc="section:4">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/dev.tools.dita" xtrc="title:4">IntelliJ IDEA</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/dev.tools.dita" xtrc="p:4">A YAML editor is included in the core distribution.</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" xtrc="topicref:4" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" href="#N60006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for core/benefits.xml--><topic id="NE0006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/benefits.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/benefits.dita" xtrc="title:1">Benefits</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/benefits.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/benefits.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/benefits.dita" xtrc="body:1">
	<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/benefits.dita" xtrc="section:1">
		<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/benefits.dita" xtrc="title:2">What are the benefits compared to coding by hand?</title>
		<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/benefits.dita" xtrc="p:1">You have to write a lot less code. JavaBuilders introduces dynamic language-level productivity (think Ruby/Groovy) to Java. 
		See this typical Java Swing example: 
		<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/benefits.dita" xtrc="codeblock:1">
ResourceBundle bundle = ResourceBundle.getBundle("Resources");

JButton button = new JButton();
button.setName("okButton");
button.setText(bundle.getString("button.ok"));
button.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
                //execute the save method
                save();
        }
        
});		
		</codeblock>
		The equivalent compact YAML content would be just: 
		<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/benefits.dita" xtrc="codeblock:2">
JButton(name=okButton,text=button.ok,onAction=save)		
		</codeblock>
		and all you need to build this Swing Java class from this YAML file is this single line
		of code somewhere in your constructor:
		<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/benefits.dita" xtrc="codeblock:3">
SwingJavaBuilder.build(this);
		</codeblock>
		The equivalent code for any other UI toolkit (e.g. SWTJavaBuilder) would be just as compact.
		</p>
	</section>
	<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/benefits.dita" xtrc="section:2">
		<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/benefits.dita" xtrc="title:3">What are the benefits compared to using GUI Builders, such as NetBeans Matisse?</title>
		<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/benefits.dita" xtrc="p:2">Mostly maintainability. For smaller examples it's probably not much of a difference 
		(since so much of the code is generated for you by Matisse), but once you get into larger, more 
		complex forms it becomes harder to maintain them in a GUI builder, especially if you have to move 
		the layout around a lot.  In JavaBuilders, it's just a matter of changing a few lines of text 
		in a YAML file.</p>
		<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/benefits.dita" xtrc="p:3">Also, e can add "custom" properties to existing objects, so we can enhance APIs or make them 
		easier, e.g.:
		<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/benefits.dita" xtrc="codeblock:4">
JFrame(size=800x400)
		</codeblock>		
		The Swing JFrame class does not have a property called "size". But JavaBuilders can support 
		virtual properties which trigger some Java code that will magically call the proper 
		equivalent methods, in order to achieve the same functionality in much less code.</p>
		<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/benefits.dita" xtrc="p:4">Last, but not least, JavaBuilders provide support for functionality not provided by
		GUI builders, such as integrated input validators or executing cancellable long running methods 
		on a background thread.</p> 
	</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" xtrc="topicref:5" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" href="#N60006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for core/drawbacks.xml--><topic id="NF0006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/drawbacks.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/drawbacks.dita" xtrc="title:1">Drawbacks</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/drawbacks.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/drawbacks.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/drawbacks.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/drawbacks.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/drawbacks.dita" xtrc="p:1">Nothing is perfect, so JavaBuilders have weak points too.
			</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/drawbacks.dita" xtrc="p:2">
				<ul class="- topic/ul " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/drawbacks.dita" xtrc="ul:1">
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/drawbacks.dita" xtrc="li:1">Lose some of the static, compile-time safety: since you are
						defining all the layouts/event wiring in a YAML text file, some of
						the referenced objects may have a different name that their
						corresponding equivalents in the Java file, especially if using
						refactoring. This can be overcome with the @Alias annotation,
						which hardcodes a link between a Java-side object and its
						definition in the YAML file.</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/drawbacks.dita" xtrc="li:2">No code completion (at least not yet). YAML is just a pure
						text file. You won't know what the known properties are for any
						particular object type unless you know them already. But in most
						cases it's the basic ones: name, text, onAction, onClicked, etc.
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/drawbacks.dita" xtrc="li:3">You have to get acquainted with YAML...sorry, can't help you
						there. Sometimes we just need to learn new things. The bottom line
						though is that all your code stays in Java, YAML is just used for
						declarative UI building.</li>
				</ul>
			</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/drawbacks.dita" xtrc="p:3">On the upside, UI components built with JavaBuilders are easily unit testable.
			You just need to do <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/drawbacks.dita" xtrc="codeph:1">new MyComponent()</codeph> in your unit test, that's all.
			When an object is built, the JavaBuilder automatically validates that not only
			the properties are defined correctly, but also all the event listeners point to
			actual existing methods in the Java class. If not, a <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/drawbacks.dita" xtrc="apiname:1">BuildException</apiname>
			will be thrown right away.</p>
		</section>
		
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" xtrc="topicref:6" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" href="#N60006" role="parent"/></linkpool></related-links></topic></topic><!--Start of imbed for swing/swing.javabuilder.in.60.seconds.xml--><topic id="N100006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="topic:1" refclass="- map/topicref bookmap/chapter "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="title:1">Swing JavaBuilder in 60 seconds or less</title><prolog class="- topic/prolog " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="prolog:1">
		<author class="- topic/author " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="author:1">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="section:1">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="title:2">Is it worth my time?</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="p:1">Here's a sample of what you can do with the Swing JavaBuilder in 60 seconds or less.
			Hopefully, it will make it clear as to what the productivity benefits are.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="p:2">To show off its abilities we will create a simple app that prompts for a person's
			data and simulates saving it to a database via a long running task on a background thread.
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="section:2">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="p:3">
				<ol class="- topic/ol " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="ol:1">
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="li:1">Download the latest Swing JavaBuilder ZIP from 
					<xref href="http://javabuilders.org" format="html" scope="external" class="- topic/xref " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="xref:1">http://javabuilders.org</xref></li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="li:2">In Eclipse, create a new Java project called "PersonApp"
					and create a default package "person.app"</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="li:3">Add the Swing JavaBuilder jar and all of its dependencies
					(from the "/lib" folder) to the project's build path</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="li:4">Create the Person class that will represent our model
					<codeblock spectitle="person/app/Person.java" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="codeblock:1">
package person.app;

import java.text.MessageFormat;

public class Person {

	private String firstName;
	private String lastName;
	private String emailAddress;
	
	/**
	 * @return the firstName
	 */
	public String getFirstName() {
		return firstName;
	}
	/**
	 * @param firstName the firstName to set
	 */
	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}
	/**
	 * @return the lastName
	 */
	public String getLastName() {
		return lastName;
	}
	/**
	 * @param lastName the lastName to set
	 */
	public void setLastName(String lastName) {
		this.lastName = lastName;
	}
	/**
	 * @return the emailAddress
	 */
	public String getEmailAddress() {
		return emailAddress;
	}
	/**
	 * @param emailAddress the emailAddress to set
	 */
	public void setEmailAddress(String emailAddress) {
		this.emailAddress = emailAddress;
	}
	
	@Override
	public String toString() {
		return MessageFormat.format("{0} {1} : {2}", getFirstName(), getLastName(), getEmailAddress());
	}

}
					</codeblock>
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="li:5">Create a "PersonApp.properties" file in the root package with the
					internationalized resources:
					<codeblock spectitle="PersonApp.properties" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="codeblock:2">
button.save=Save
button.cancel=Cancel

label.firstName=First Name:
label.lastName=Last Name:
label.email=Email
					</codeblock>
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="li:6">Create the view YAML file PersonApp.yaml:
					<codeblock spectitle="person/app/PersonApp.yaml" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="codeblock:3">
JFrame(name=frame, title=frame.title, size=packed, defaultCloseOperation=exitOnClose):
    - JLabel(name=fNameLbl, text=label.firstName)
    - JLabel(name=lNameLbl, text=label.lastName)
    - JLabel(name=emailLbl, text=label.email)
    - JTextField(name=fName)
    - JTextField(name=lName)
    - JTextField(name=email)
    - JButton(name=save, text=button.save, onAction=($validate,save,done))
    - JButton(name=cancel, text=button.cancel, onAction=($confirm,cancel))
    - MigLayout: |
        [pref]     [grow,100]   [pref]     [grow,100] 
        fNameLbl   fName        lNameLbl   lName
        emailLbl   email+*
        &gt;save+*=1,cancel=1
bind:
    - fName.text: this.person.firstName
    - lName.text: this.person.lastName
    - email.text: this.person.emailAddress
validate:
    - fName.text: {mandatory: true, label: label.firstName}
    - lName.text: {mandatory: true, label: label.lastName}
    - email.text: {mandatory: true, emailAddress: true, label: label.email}			
					</codeblock>
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="li:7">Create the controller Java class PersonApp
					<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="codeblock:4">
package person.app;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

import org.javabuilders.BuildResult;
import org.javabuilders.annotations.DoInBackground;
import org.javabuilders.event.BackgroundEvent;
import org.javabuilders.event.CancelStatus;
import org.javabuilders.swing.SwingJavaBuilder;

public class PersonApp extends JFrame {

	private Person person;

	private BuildResult result;
	
	public PersonApp() {
		person = new Person();
		person.setFirstName("John");
		person.setLastName("Smith");
		result = SwingJavaBuilder.build(this);
	}

	public Person getPerson() {
		return person;
	}
	
	private void cancel() {
		setVisible(false);
	}
	
	@DoInBackground(cancelable=true, indeterminateProgress=false, progressStart=1, progressEnd=100)
	private void save(BackgroundEvent evt) {
		//simulate a long running save to a database
		for(int i = 0; i &lt; 100; i++) {
			//progress indicator
			evt.setProgressValue(i + 1);
			evt.setProgressMessage("" + i + "% done...");
			
			//check if cancel was requested
			if (evt.getCancelStatus() != CancelStatus.REQUESTED) {
				
				//sleep
				try {
					Thread.sleep(100);
				} catch (InterruptedException e) {}
				
			} else {
				//cancel requested, let's abort
				evt.setCancelStatus(CancelStatus.COMPLETED);
				break;
			}
		}
	}
	
	//runs after successful save
	private void done() {
		JOptionPane.showMessageDialog(this, "Person data: " + person.toString());
	}
	
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				//activate internationalization
				SwingJavaBuilder.getConfig().addResourceBundle("PersonApp");
				try {
					UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
					new PersonApp().setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
}
					</codeblock>
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="li:8">Run the PersonApp.main() method. You should see an input dialog
					like this appear:
					<image href="swing/img/person.app.gif" placement="break" class="- topic/image " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="image:1"/>
					Notice that the default person name is propagated from the Java code to the UI via data binding. Also, all the controls are created and the
					layout is executed without the need for an IDE-specific GUI builder.
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="li:9">Enter an invalid email address for the person and press Save:
					<image href="swing/img/person.app.validation.gif" placement="break" class="- topic/image " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="image:2"/>
					The validation logic (invoked via <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="codeph:1">"$validate"</codeph>) executed and perform basic input validation.
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="li:10">Enter a valid email address:
					<image href="swing/img/person.app.2.gif" placement="break" class="- topic/image " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="image:3"/>
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="li:11">Press "Save". The <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="codeph:2">save()</codeph> Java method is executed (which simulates a long running database save with a progress bar) and since it is
					annotated with the <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="codeph:3">@DoInBackground</codeph> annotation it will automatically run on a background thread using the SwingWorker library.
					<image href="swing/img/person.app.3.gif" placement="break" class="- topic/image " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="image:4"/>
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="li:12">After the save logic executes, the <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="codeph:4">done()</codeph> Java method is executed to inform the user the save was successful. Notice that the
					email address we entered was automatically propagated back to the underlying bean using databinding.
					<image href="swing/img/person.app.4.gif" placement="break" class="- topic/image " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="image:5"/>
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="li:13">Press 'Cancel' to close the window. Since you specified <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="codeph:5">"$confirm"</codeph> in the action handler, it will automatically prompt the user to
					confirm the action. If they select "Yes", the <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="codeph:6">cancel()</codeph> Java method will be called and the window will close.
					<image href="swing/img/person.app.5.gif" placement="break" class="- topic/image " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="image:6"/>
					</li>
				</ol>
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="section:3">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="title:3">Summary</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="p:4">
				<ul class="- topic/ul " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="ul:1">
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="li:14">22 lines of YAML</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="li:15">3 simple Java methods to handle <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="codeph:7">save(), done() and cancel()</codeph> (and without any of the logic to create and layout the controls)</li>
				</ul>
				That is all we needed to create a fully functional application with control creation and layout, data input validation and executing long running
				business methods on a background thread via SwingWorker. Not to mention it's fully localized with all the labels being automatically fetched from a <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.javabuilder.in.60.seconds.dita" xtrc="apiname:1">ResourceBundle</apiname>
				without any additional coding overhead.
			</p>
		</section>
	</body></topic><!--Start of imbed for core/core.features.xml--><topic id="N110006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.dita" xtrc="topic:1" refclass="- map/topicref bookmap/chapter "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.dita" xtrc="title:1">Core Features</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.dita">Jacek Furmankiewicz</author>
	</prolog><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" xtrc="chapter:4" mapkeyref="swing.javabuilder"/><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" xtrc="topicref:1" mapkeyref="swing.javabuilder"><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" xtrc="topicref:1"><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:2" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N120006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:3" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N130006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:4" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N140006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:5" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N150006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:6" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N160006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:7" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N170006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:8" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N180006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:9" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N190006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:10" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N1A0006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:11" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N1B0006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:12" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N1C0006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:13" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N1D0006" role="child"/></linkpool></linkpool></related-links><!--Start of imbed for core/obtaining.references.xml--><topic id="N120006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/obtaining.references.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/obtaining.references.dita" xtrc="title:1">Obtaining references to created components</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/obtaining.references.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/obtaining.references.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/obtaining.references.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/obtaining.references.dita" xtrc="section:1">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/obtaining.references.dita" xtrc="title:2">Convention over configuration</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/obtaining.references.dita" xtrc="p:1">In most cases, we use a straightforward
				convention-over-configuration approach. If you define an object in
				YAML and then define a Java instance instance variable with the same
				name and of compatible type, then JavaBuilders will set the
				reference on it automatically (even if it is a private variable, it
				does not need to be public).</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/obtaining.references.dita" xtrc="p:2">Simple example:</p>
			<codeblock spectitle="MyFrame.yaml" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/obtaining.references.dita" xtrc="codeblock:1">
JFrame:
    - JButton(name=okButton,text=OK,onAction=save)		
		</codeblock>
			<codeblock spectitle="MyFrame.java" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/obtaining.references.dita" xtrc="codeblock:2">
public class MyFrame extends JFrame {

    //this object's reference will be set automatically
    private JButton okButton;  
    private BuildResult result = SwingJavaBuilder.build(this)

    public MyFrame(){
     
        //reference is set! NullPointerException will not occur
        okButton.setText("New text"); 
    }

    private void save() {
       //execute some business logic...
    }
}		
		</codeblock>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/obtaining.references.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/obtaining.references.dita" xtrc="title:3">Obtaining references manually</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/obtaining.references.dita" xtrc="p:3">
				You can also just fetch the object reference manually from the
				returned
				<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/obtaining.references.dita" xtrc="apiname:1">BuildResult</apiname>
				object:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/obtaining.references.dita" xtrc="codeblock:3">
public MyFrame()  {
     JButton okButton = (JButton)result.get("okButton");
}		
		</codeblock>
				But the convention over configuration approach is much preferred.
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" xtrc="topicref:2" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N110006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for core/event.handling.xml--><topic id="N130006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="title:1">Hooking up event listeners to Java methods</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="section:1">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="title:2">Overview</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="p:1">
				The standard approach is to provide a standard "onEvent" property
				(e.g. "onAction", "onClicked", "onDoubleClicked") and then pass it a
				single method name or a collection of method names.
				<codeblock spectitle="Single method" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="codeblock:1">
JButton(text=OK, onAction=save)		
		</codeblock>
				<codeblock spectitle="Multiple methods to be executed in sequence" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="codeblock:2">
JButton(text=OK, onAction=(validateInput,save,close))
		</codeblock>
				If any of the methods return a boolean
				<b class="+ topic/ph hi-d/b " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="b:1">false</b>
				, then the other methods get aborted and will not be called. Simple
				convention over configuration approach
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="title:3">Mapping to methods on the Java side</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="p:2">
				When you specify a method name (e.g. "save") in the YAML file, it
				will attempt to execute the corresponding method in the Java class.
				Different signatures of the method are supported, in order of
				preference:
				<codeblock spectitle="method(calling object type or its superclass, event specific class)" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="codeblock:3">
private void save(JButton button, ActionEvent event) {}		
		</codeblock>
				<codeblock spectitle="method(event specific class)" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="codeblock:4">
private void save(ActionEvent event) {}
		</codeblock>
		<codeblock spectitle="method(calling object type or its superclass)" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="codeblock:5">
private void save(JButton button) {}		
		</codeblock>
<codeblock spectitle="method()" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="codeblock:6">
private void save() {}		
		</codeblock>		
Enter whichever one you want and JavaBuilders will find it and execute it. 
If it finds multiple ones, it will execute the first one it finds based on the preference above.
If none are found, a BuildException will  be thrown <b class="+ topic/ph hi-d/b " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="b:2">right away during build time</b>. So, you do
not have to actually test your event listener logic by manually clicking on the button or menu item,
the validation occurs right away as part of the build process. This simplifies unit testing and limits
the risk of lost type safety.
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" xtrc="topicref:3" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N110006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for core/databinding.xml--><topic id="N140006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/databinding.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/databinding.dita" xtrc="title:1">Databinding</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/databinding.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/databinding.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/databinding.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/databinding.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/databinding.dita" xtrc="p:1">Binding is defined by adding a "bind" root node after all
				the controls have been defined. Unlike in most other languages, the
				binding is not defined at the property level, but is a stand-alone
				node of its own. This is done to enforce separation of concerns and
				ensure clarity. You can see all your data binding in one place, all
				together.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/databinding.dita" xtrc="p:2">
				Sample (assume we have a backing
				<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/databinding.dita" xtrc="apiname:1">JFrame JavaBean</apiname>
				with two public properties "lastName" and "firstName"):
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/databinding.dita" xtrc="codeblock:1">
JFrame(name=frame,title=Hallo):
    content:
       - JLabel(name=firstNameLabel, text="First name", labelFor=firstNameField)
       - JTextField(name=firstNameField)
       - JLabel(name=lastNameLabel, text="Last name", labelFor=lastNameField)
       - JTextField(name=lastNameField)
       - JButton(name=saveButton, text=Save)
    layout: |            
      []                 [grow]     
      &gt;firstNameLabel    firstNameField
      &gt;lastNameLabel     lastNameField
      &gt;saveButton+*    
bind:
    - this.title : "Hello, ${firstNameField.text}" #bind the frame title to show last name   using an EL expression
    - this.firstName : firstNameField.text         #bind the public Java property to the text field's text value, using a direct simple expression
				</codeblock>
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/databinding.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/databinding.dita" xtrc="title:2">Databinding requirements</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/databinding.dita" xtrc="p:3">In order for the binding to work between public properties, they
				must fire a "property change" event on the "set" and the parent
				class must provide the "addPropertyChangeListener" and
				"removePropertyChangeListener" methods. This is all part of the
				standard Beans Binding requirements.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/databinding.dita" xtrc="p:4">A good example can be found in the Bound Properties Java tutorial:
			http://java.sun.com/docs/books/tutorial/javabeans/properties/bound.html
			</p> 
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/databinding.dita" xtrc="section:3">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/databinding.dita" xtrc="title:3">Supported features</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/databinding.dita" xtrc="p:5">In order to integrate as best as possible with each UI toolkit, JavaBuilders rely
			on the best toolkit-specific library for databinding. This means that the Swing JavaBuilder
			uses Beans Binding (JSR 295), while the SWT JavaBuilder uses JFace DataBinding.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/databinding.dita" xtrc="p:6">Not all databinding engines provide the same functionality. For example, Beans Binding
			does provide support for EL expressions in data binding (hence you can use them for
			the Swing JavaBuilder), but the JFace Databinding engine does not (and therefore they
			are not supported for the SWT JavaBuilder).</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" xtrc="topicref:4" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N110006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for core/input.validation.xml--><topic id="N150006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="title:1">Input validation</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="p:1">
				Similar to data binding, input validation is configured via a
				separate root level node called
				<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="apiname:1">validate</apiname>:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="codeblock:1">
JFrame(name=frame,title=Binding Frame,size=packed):
    content:
        - JLabel(name=fnLbl, text="First name:")
        - JTextField(name=fName)
        - JLabel(name=lnLbl, text="Last name:")
        - JTextField(name=lName)
        - JButton(name=ok, text=OK, onAction=($validate,save,cancel))
        - JButton(name=cancel, text=Cancel, onAction=cancel)
        - MigLayout: |
           []      [grow,200px]
           &gt;fnLbl  fName
           &gt;lnLbl  lName         
           &gt;ok+*=1,cancel=1      [grow,bottom]
bind:
    - firstName: fName.text
    - lastName: lName.text
validate:
    - fName.text: {label: First Name, mandatory: true, minLength : 5}  			
			</codeblock>
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="title:2">Invoking input validation</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="p:2">
				If you want to do in from the YAML file, just put
				<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="apiname:2">$validate</apiname>
				as the method name in any event handler, e.g.
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="codeblock:2">
JButton(name=saveBtn,text=Save,onAction=($validate,save,close))
			</codeblock>
				If you want to do it from the Java then you just need to call the
				<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="apiname:3">validate()</apiname>
				method on the
				<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="apiname:4">BuildResult</apiname>
				object that was returned:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="codeblock:3">
private BuildResult result = SwingJavaBuilder.build(this);

//validate user input
private boolean validate() {
    return result.validate();
}
			</codeblock>
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="section:3">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="title:3">Field label for error messages</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="p:3">
				The "label" property is used to define the name of the field that
				will be using in any error messages. It is localizable, so you can
				sent it a resource key instead, e.g.:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="codeblock:4">
validate:
    - fName.text: {label: label.firstName, mandatory: true, minLength : 5}  			
			</codeblock>
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="section:4">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="title:4">Validator routines</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="p:4">The following validator routines are currently available</p>
			<simpletable class="- topic/simpletable " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="simpletable:1">
				<sthead class="- topic/sthead " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="sthead:1">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:1">Validation type</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:2">Example</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:3">Comment</stentry>
				</sthead>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="strow:1">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:4">mandatory</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:5">mandatory: true</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:6"/>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="strow:2">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:7">minLength</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:8">minLength : 5</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:9"/>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="strow:3">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:10">maxLength</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:11">maxLength : 5</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:12"/>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="strow:4">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:13">regex</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:14">regex: "[a-zA-Z0-9]+"</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:15">Uses default validation message</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="strow:5">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:16"/>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:17">regex: "[a-zA-Z0-9]+", regexMessage: "''{0}'' must be a number or letter"</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:18">Uses custom error messagee</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="strow:6">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:19">minValue</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:20">minValue: 5</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:21"/>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="strow:7">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:22">maxValue</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:23">maxValue: 50</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:24"/>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="strow:8">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:25">dateFormat</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:26">dateFormat: yyyy/mm/dd</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:27"/>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="strow:9">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:28">emailAddress</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:29">emailAddress: true</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="stentry:30"/>
				</strow>
			</simpletable>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="section:5">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="title:5">Full example</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="p:5">
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="codeblock:5">
validate:
    - mandatory.text: {label: Mandatory Field, mandatory: true}
    - date.text: {label: Date Field, dateFormat: "yyyy/mm/dd"}
    - email.text: {label: E-Mail, email: true}
    - minmax.text: {label: Min/Max Length, minLength: 5, maxLength: 10}
    - regex.text: {label: Regex, regex: "[a-zA-Z0-9]+"}
    - regex2.text: {label: Regex, regex: "[a-zA-Z0-9]+", regexMessage: "''{0}'' must be a number or letter"}
    - long.text: {label: Min/Max Long, minValue: 5, maxValue: 50, mandatory: true}			
			</codeblock>
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="section:6">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="title:6">Adding custom validators</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="p:6">The default validator routines not powerful enough for you? You can easily add custom validation logic to be executed together with the built-in routines via Java-side code: 
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/input.validation.dita" xtrc="codeblock:6">
result.getValidators().add(new IValidator() {

    public void validate(Object value, ValidationMessageList list) {
        if (!isValid) {
                list.add(new ValidationMessage("Input is not valid 'cause I say so"));
        }
    }
});			
			</codeblock>
			</p>
		</section>
		
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" xtrc="topicref:5" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N110006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for core/background.tasks.xml--><topic id="N160006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="title:1">Executing long running methods on a background thread</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="p:1">A common issue in most UI toolkits is that the application locks
				up if a long running process is running on the EDT (Event Dispatch
				Thread). In this case, the recommended solution is to execute it on
				a background thread and if possible, provide some sort of progress
				indicator to the user letting them know about the current status of
				this process (e.g. saving large amounts of data to a database).</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="title:2">Method Annotation</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="p:2">
				In JavaBuilders, this is accomplished by simply annotating the long
				running method with a
				<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="codeph:1">@DoInBackground</codeph>
				annotation (which provides some attributes that can customize how
				the long running process is handled).
			</p>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="codeblock:1">
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.METHOD)
public @interface DoInBackground {
        /**
         * @return Progress message
         */
        String progressMessage() default "label.processing";

        /**
         * @return If background task is cancelable or not
         */
        boolean cancelable() default false;
        /**
         * @return Default start value for progress bar
         */
        int progressStart() default 1;
        /**
         * @return Default end value for progress bar
         */
        int progressEnd() default 100;
        /**
         * @return Current progress value
         */
        int progressValue() default 1;
        /**
         * @return Indicates if task should block UI with a popup or not
         */
        boolean blocking() default true;
        /**
         * @return Indicates to show indeterminate progress indicator. Overrides the progress start/end/value if set to true
         */
        boolean indeterminateProgress() default true;
}
			</codeblock>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="p:3">
				Any method that is annotated as such must implement a signature that
				accepts an object of type
				<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="codeph:2">BackgroundEvent</codeph>
				, which allows the background method to communicate with the UI's
				progress indicator and even cancel itself, if the user requests it,
				e.g.:
			</p>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="codeblock:2">
@DoInBackground(cancelable=true, progressStart=1, progressEnd=100, progressValue=1, indeterminateProgress=false)
private void save(BackgroundEvent evt) {
        System.out.println("SAVE...");
        for(int i = 0; i &lt; 100; i++) {

                if (evt.getCancelStatus() != CancelStatus.REQUESTED) {
                        try {
                                Thread.currentThread().sleep(100);
                                evt.setProgressValue(i + 1);
                                evt.setProgressMessage(String.format("Processing %s of %s...", 
                                evt.getProgressValue(), evt.getProgressEnd()));
                        } catch (InterruptedException e) {}
                } else {
                        evt.setCancelStatus(CancelStatus.PROCESSING);
                        System.out.println("Cancelling...");
                        evt.setCancelStatus(CancelStatus.COMPLETED);
                        break;
                }
        }
        System.out.println("SAVE END...");
}
			</codeblock>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="section:3">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="title:3">Executing multiple methods together</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="p:4">A typical scenario in an input dialog that occurs when a user presses the Save button is: 
			<ol class="- topic/ol " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="ol:1">
				<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="li:1">validate input</li>
				<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="li:2">save the data (this can take a long time)</li>
				<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="li:3">close the window</li>
			</ol>
			The way to handle this is to have the button execute multiple methods in sequence, e.g.: 
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="codeblock:3">
JButton(text=Save,onAction=($validate,save,close))			
			</codeblock>
			On the Java side, the long running method is annotated as such: 
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="codeblock:4">
@DoInBackground(indeterminateProgress=true)
private void save() { //long running process }

private void close() {
    setVisible(false);
    dispose();
}			
			</codeblock>
			The methods <b class="+ topic/ph hi-d/b " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="b:1">after</b> the long running method (i.e. <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="codeph:3">"close"</codeph> in this 
			example), will only execute <b class="+ topic/ph hi-d/b " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="b:2">after</b> the long running method has finished, 
			they will not run in parallel, even though they are on different threads. 
			Hence, the sequence of events is preserved. 
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="section:4">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="title:4">Domain-specific Implementations</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="p:5">In Swing JavaBuilder, long running methods are handled by using the standard 
			<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="codeph:4">SwingWorker</codeph> library. A Swing progress dialog will popup up 
			informing the user that a process is running. If the method flagged itself as cancelable, 
			the Cancel button on the progress dialog will be enabled, allowing the user to cancel 
			the task if it runs for too long.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="p:6">For the SWT JavaBuilder the plan is to support something similar or alternatively
			plug into the JFace Progress/Tasks API.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/background.tasks.dita" xtrc="p:7">As you can see, JavaBuilders does not have a "one size fits all" approach and for 
			each toolkit we plan to use the best option available on that specific
			platform.</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" xtrc="topicref:6" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N110006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for core/internationalization.xml--><topic id="N170006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="title:1">Internationalization</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="p:1">Internationalizaton support in any Builder is
				provided at two levels: global and class-level. If any resource
				bundle is present (either at the global or class level), the
				internationalization support will automatically get activated.</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="title:2">Global Resource Bundles</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="p:2">
				In your main() just add the list of global application resource
				bundles to the configuration of your builder, e.g.:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="codeblock:1">
SwingJavaBuilder.getConfig().addResourceBundle("Resources");			
			</codeblock>
				or:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="codeblock:2">
ResourceBundle myResourceBundle = ....
SwingJavaBuilder.getConfig().addResourceBundle(myResourceBundle);			
			</codeblock>
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="section:3">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="title:3">Class-level Resource Bundles</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="p:3">
				If you need to have additional class-level resource bundles, just
				pass them in during the buld request:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="codeblock:3">
private ResourceBundle bundle = ResourceBundle.getBundle("MyClassBundle");
private BuildResult result = SwingJavaBuilder.build(this, bundle);			
			</codeblock>
				The builder will look at the class-level bundles first for a key and
				if not found, will search through the global ones.
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="section:4">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="title:4">Usage</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="p:4">Once you register a resource bundle, you can pass a resource name directly to any of the properties that have been flagged as localizable, e.g.
			<codeblock spectitle="YAML" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="codeblock:4">
JButton(name=okButton, text=button.ok)			
			</codeblock>
			<codeblock spectitle="Properties file" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/internationalization.dita" xtrc="codeblock:5">
button.ok=OK			
			</codeblock>
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" xtrc="topicref:7" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N110006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for core/enum.xml--><topic id="N180006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita" xtrc="title:1">Enum property values</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita" xtrc="p:1"> When building an object, if the specified property type is an
				Enum of any sort, the builder will automatically allow you to enter
				it just using the enum constant, without the actual enum name
				prefix.</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita" xtrc="title:2">Enums defined like constant Integers</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita" xtrc="p:2">
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita" xtrc="codeblock:1">
//enum defined like static int constants
enum StartPosition{ CENTER_IN_SCREEN, CENTER_IN_PARENT, MANUAL }
			</codeblock>
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita" xtrc="codeblock:2">
JXFrame.setStartPosition(StartPosition position)			
			</codeblock>
				In YAML, you can do then either:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita" xtrc="codeblock:3">
JXFrame(startPosition=CENTER_IN_PARENT)			
			</codeblock>
				or the Java camel-case named equivalent:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita" xtrc="codeblock:4">
JXFrame(startPosition=centerInParent)			
			</codeblock>
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita" xtrc="section:3">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita" xtrc="title:3">Enums defined using Pascal case</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita" xtrc="p:3">
				If your enum is defined instead using a Pascal case syntax, e.g.
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita" xtrc="codeblock:5">
//enum defined like static int constants
enum StartPosition{ CenterInScreen, CenterInParent, Manual}
			</codeblock>
				then you can still do either the original constant value or the
				camel-case named equivalent:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita" xtrc="codeblock:6">
JXFrame(startPosition=CenterInParent)
			</codeblock>
				or:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/enum.dita" xtrc="codeblock:7">
JXFrame(startPosition=centerInParent)			
			</codeblock>
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" xtrc="topicref:8" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N110006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for core/static.int.constant.xml--><topic id="N190006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/static.int.constant.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/static.int.constant.dita" xtrc="title:1">Static int constant property values</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/static.int.constant.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/static.int.constant.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/static.int.constant.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/static.int.constant.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/static.int.constant.dita" xtrc="p:1">Similar to the way Enum values are handled, the default
				behaviour is that when a String value is passed to an <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/static.int.constant.dita" xtrc="codeph:1">int</codeph> property,
				the builder will attempt to find a corresponding <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/static.int.constant.dita" xtrc="codeph:2">final static int</codeph>
				value on the Java class and use that. Both camel-case values and
				actual static constant names can be used, e.g.:</p>
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/static.int.constant.dita" xtrc="codeblock:1">
JFrame(defaultCloseOperation=EXIT_ON_CLOSE)				
				</codeblock>
				or:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/static.int.constant.dita" xtrc="codeblock:2">
JFrame(defaultCloseOperation=exitOnClose)				
				</codeblock>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" xtrc="topicref:9" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N110006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for core/custom.components.xml--><topic id="N1A0006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.components.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.components.dita" xtrc="title:1">Using custom components</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.components.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.components.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.components.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.components.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.components.dita" xtrc="p:1">Sooner or later you will want to create a custom component
				instance from within your YAML file. However, the current builder
				does not know how to map your custom component name (e.g.
				"MyCustomPanel") to an actual Java class.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.components.dita" xtrc="p:2"> In order to let it know all you have to do is define an instance
				variable with the same type in your Java-side code and it will
				automatically find the corresponding class definition that way, e.g.
				<codeblock spectitle="YAML" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.components.dita" xtrc="codeblock:1">
JFrame(title=frame.title,state=max,defaultCloseOperation=exitOnClose):
    - ComponentsPanel(name=componentsPanel,tabTitle=tab.components)
    - BorderPanel(name=borderPanel,tabTitle=tab.borders)
    - CardLayoutPanel(name=cardLayoutPanel,tabTitle=tab.cardLayout)       
    - FlowLayoutPanel(name=flowLayoutPanel,tabTitle=tab.flowLayout)
    - MigLayoutPanel1(name=migLayoutPanel1,tabTitle=tab.migLayout1)				
				</codeblock>
				<codeblock spectitle="Java" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.components.dita" xtrc="codeblock:2">
private ComponentsPanel componentsPanel;
private FlowLayoutPanel flowLayoutPanel;
private CardLayoutPanel cardLayoutPanel;
private MigLayoutPanel1 migLayoutPanel1;
private BorderPanel borderPanel;				
				</codeblock>
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" xtrc="topicref:10" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N110006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for core/custom.global.commands.xml--><topic id="N1B0006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita" xtrc="title:1">Custom global commands</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita" xtrc="p:1">Custom global commands allows you to basically define a
				named reusable piece of code that you can refer to anywhere in your
				YAML file's event handlers.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita" xtrc="p:2">
				Custom commands are prefixed with "$" and the system ships with two
				pre-defined global commands:
				<ul class="- topic/ul " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita" xtrc="ul:1">
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita" xtrc="li:1">
						<b class="+ topic/ph hi-d/b " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita" xtrc="b:1">$validate</b>
						: triggers the input validation logic, if defined
						<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita" xtrc="codeblock:1">
JButton(name=okButton, text=OK, onAction=($validate,save,finishSave))				
				</codeblock>
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita" xtrc="li:2">
						<b class="+ topic/ph hi-d/b " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita" xtrc="b:2">$confim</b>
						: displays a standard "Are you sure?" confirmation dialog that can
						be invoked before any destructive action:
						<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita" xtrc="codeblock:2">
JButton(name=deleteButton, text=Delete, onAction=($confirm,delete))				
				</codeblock>
					</li>
				</ul>
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita" xtrc="title:2">Adding your own custom commands</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita" xtrc="p:3">You need to implement the ICustomCommand interface and add it to your builder's configuration: 
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/custom.global.commands.dita" xtrc="codeblock:3">
SwingJavaBuilder.getConfig().addCustomCommand("$confirm", new ICustomCommand&lt;Boolean&gt;() {
        public Boolean process(BuildResult result, Object source) {
                Component c = null;
                if (result.getCaller() instanceof Component) {
                        c = (Component) result.getCaller();
                }
                int value = JOptionPane.showConfirmDialog(c, Builder.getResourceBundle().getString("question.areYouSure"), 
                                Builder.getResourceBundle().getString("title.confirmation"), JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                
                if (value == JOptionPane.YES_OPTION) {
                        return true;
                } else {
                        return false;
                }
        }
});				
				</codeblock>
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" xtrc="topicref:11" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N110006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for core/build.events.xml--><topic id="N1C0006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/build.events.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/build.events.dita" xtrc="title:1">Build events</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/build.events.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/build.events.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/build.events.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/build.events.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/build.events.dita" xtrc="p:1">
				If you need to hook up some custom pre- or post-processing every
				time a build is executed (e.g. to integrate a 3rd party library like
				<xref href="https://javacss.dev.java.net/" format="html" scope="external" class="- topic/xref " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/build.events.dita" xtrc="xref:1">
					JavaCSS</xref>
				, you can add a listener to the builder), preferably in your
				<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/build.events.dita" xtrc="codeph:1">main()</codeph>
				method , e.g.:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/build.events.dita" xtrc="codeblock:1">
//event listeners
SwingJavaBuilder.getConfig().addBuildListener(new BuildAdapter() {
        @Override
        public void buildStarted(BuildEvent evt) {
                System.out.println(("Build started from caller: " + evt.getSource()));
        }
        @Override
        public void buildEnded(BuildEvent evt) {
                System.out.println(("Build ended for root object: " + evt.getResult().getRoot()));
        }
});				
				</codeblock>
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/build.events.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/build.events.dita" xtrc="title:2">Processing the proper object</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/build.events.dita" xtrc="p:2">In the <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/build.events.dita" xtrc="codeph:2">buildStarted</codeph> event you should access <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/build.events.dita" xtrc="codeph:3">evt.getSource()</codeph>,
				which refers to the caller that initiated the build (i.e. your Java
				class). However, in the <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/build.events.dita" xtrc="codeph:4">buildEnded</codeph> event it is better to access
				<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/build.events.dita" xtrc="codeph:5">evt.getResult().getRoot()</codeph>, which is the root object that was created
				from the build file.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/build.events.dita" xtrc="p:3">The two are not necessarily the same (e.g. in order to create a
				JPanel from a YAML file your Java-side class does not have to extend
				JPanel at all, it is optional). This is useful in toolkits like SWT that do not
				allow you to extend particular component types.</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" xtrc="topicref:12" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N110006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for core/hot.deployment.xml--><topic id="N1D0006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/hot.deployment.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/hot.deployment.dita" xtrc="title:1">Hot deployment of UI components</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/hot.deployment.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/hot.deployment.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/hot.deployment.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/hot.deployment.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/hot.deployment.dita" xtrc="p:1">In order to further maximize developer productivity, all the
				JavaBuilders come with support for dynamically updating components
				while running the application. This means you can edit your YAML
				files and preview them in your app by just re-opening the
				panel/dialog being edited, without the need to restart the whole
				application.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/hot.deployment.dita" xtrc="p:2">
				In order to do this you need to pass the
				<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/hot.deployment.dita" xtrc="codeph:1">"javabuilders.dev.src"</codeph>
				property to the Java VM on program startup and have it point to the
				relative path where your source code is vs. the compiled .class
				files.
			</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/hot.deployment.dita" xtrc="p:3">
				In Eclipse, where the classes are in "bin" and the source code
				usually in "src" you need to pass this VM argument in your run
				configuration:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/hot.deployment.dita" xtrc="codeblock:1">
-Djavabuilders.dev.src=../src				
				</codeblock>
			</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/hot.deployment.dita" xtrc="p:4">That's it! Now the builder will read the YAML files from the
				source folder, instead of the bin folder, meaning you can keep
				editing them while the app is running and immediately see the
				changes as soon as you re-open the current component you were
				working on.</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" xtrc="topicref:13" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="#N110006" role="parent"/></linkpool></related-links></topic></topic><!--Start of imbed for swing/swing.features.xml--><topic id="N1E0006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.dita" xtrc="topic:1" refclass="- map/topicref bookmap/chapter "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.dita" xtrc="title:1">Swing Features</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.dita" xtrc="body:1">
		<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.dita" xtrc="p:1">Now that we've seen the core JavaBuilders's features, let's explore what the Swing JavaBuilder
		provides on top of that for building actual Swing user interfaces.</p>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" xtrc="topicref:1" mapkeyref="swing.javabuilder"><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" xtrc="topicref:1"><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:2" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N1F0006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:3" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N200006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:4" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N210006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:5" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N220006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:6" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N230006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:7" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N240006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:8" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N250006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:9" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N260006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:10" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N270006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:11" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N280006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:12" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N290006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:13" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N2A0006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:14" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N2B0006" role="child"/></linkpool></linkpool></related-links><!--Start of imbed for swing/overview.xml--><topic id="N1F0006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/overview.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/overview.dita" xtrc="title:1">Overview</title><prolog class="- topic/prolog "><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap">Jacek Furmankiewicz</author></prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/overview.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/overview.dita" xtrc="section:1">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/overview.dita" xtrc="title:2">Swing JavaBuilder</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/overview.dita" xtrc="p:1">The Swing JavaBuilder is an instance of the JavaBuilders engine, pre-configured
			for use with the Swing UI toolkit. It is represented by the main class 
			<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/overview.dita" xtrc="codeph:1">org.javabuilders.swing.SwingJavaBuilder</codeph> and in most typical
			cases that is the only class you will be dealing with.
			<codeblock spectitle="Java" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/overview.dita" xtrc="codeblock:1">
public class MyFrame extends JFrame {
    private BuildResult result = SwingJavaBuilder.build(this);
    public MyFrame() {}
}			
			</codeblock>
			The returned <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/overview.dita" xtrc="codeph:2">BuildResult</codeph> obtain contains a reference to the
			various objects that were created during the build process, but it is often
			not necessary to interact with it at all (unless you are doing something more
			complex or custom).
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/overview.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/overview.dita" xtrc="title:3">General handling of component properties</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/overview.dita" xtrc="p:2">
				In most cases there is a simple one-to-one mapping between the
				properties of Swing components and how they are set in the YAML
				file, e.g. a
				<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/overview.dita" xtrc="codeph:3">JTextField.text</codeph>
				property in YAML is simply
				<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/overview.dita" xtrc="codeph:4">JTextField(text=Some Text)</codeph>.
			</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/overview.dita" xtrc="p:3"> However, some components have been enhanced in the Swing
				JavaBuilder to make instantiating and using them even easier.</p>
		</section>		
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" xtrc="topicref:2" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N1E0006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for swing/actions.menus.xml--><topic id="N200006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="title:1">Actions and menus</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="p:1">Creating actions and menus for any application is one of
				the most cumbersome and time consuming tasks in Swing development.
				Fortunately enough, the Swing JavaBuilder delivers a whole slew of
				productivity enhancements in this area that makes creating menus a
				breeze.</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="title:2">Text, accelerators and mnemonics</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="p:2">
				Whether you are dealing with an
				<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="codeph:1">Action</codeph>
				or a
				<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="codeph:2">JMenuItem</codeph>
				, you can handle defining all these 3 properties in one simple text
				value, where the mnemonic is indicated via a
				<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="codeph:3">"&amp;"</codeph>
			prefix and the accelerator is typed in manually after a <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="codeph:4">"\t"</codeph> tab
			indicator (similar to the way it is done in SWT), e.g.
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="codeblock:1">
JMenuItem(text="&amp;Save\tCtrl+S")			
			</codeblock>
			The sample above sets the text to "Save", the mnemonic on the "S" character and the 
			accelerator to "Ctrl+S".
			</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="p:3">Valid accelerators are:
			<ol class="- topic/ol " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="ol:1">
				<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="li:1">Ctrl</li>
				<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="li:2">Alt</li>
				<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="li:3">Shift</li>
				<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="li:4">Meta</li>
			</ol>
			followed by the appropriate character. They can be mixed together, e.g. "Ctrl+Alt+N".
			Due to the embedded "\t", such menu definitions have to be escaped into quoted text, as per the example above. 
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="section:3">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="title:3">Actions</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="p:4">The regular Swing Action API has been modified separately to separate the 
			concept of "name" vs "text" (which are the same in the Action API, but we treat 
			them separately so that the text can be easily internationalized, without affecting the name).
			It provides <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="apiname:1">name, text, toolTipText, icon</apiname> properties and the name
			of the Java method to be invoked is defined in the <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="apiname:2">onAction</apiname> handler.
			<codeblock spectitle="YAML" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="codeblock:2">
Action(name=newAction, text=menu.file.new, icon=images/document-new.png, onAction=onFileNew)			
			</codeblock>
			<codeblock spectitle="Java" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="codeblock:3">
 private void onFileNew() {
         System.out.print("onFileNew was invoked!");
 }			
			</codeblock>
			</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="p:5">
			Any descendant of <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="apiname:3">AbstractButton</apiname> (such as <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="apiname:4">JMenuItem</apiname>
			or <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="apiname:5">JButton</apiname> can then refer to it in its <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="apiname:6">action</apiname> property, e.g.:
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="codeblock:4">
JFrame(title=frame.title, state=max, defaultCloseOperation=exitOnClose):
    - Action(name=newAction, text=menu.file.new, toolTipText=menu.file.new.tooltip, icon=images/document-new.png, onAction=onFileNew)
    - Action(name=openAction, text=menu.file.open, toolTipText=menu.file.open.tooltip, icon=images/document-open.png, onAction=onFileOpen)
    - Action(name=saveAction, text=menu.file.save, toolTipText=menu.file.save.tooltip, icon=images/document-save.png, onAction=onSave)
    - Action(name=exitAction, text=menu.file.exit, icon=images/process-stop.png, onAction=($confirm,exit))
    - Action(name=option1Action, text=menu.option1, onAction=option1)
    - Action(name=helpAboutAction,text=menu.help.about,onAction=onHelpAbout)
    - JMenuBar:
        - JMenu(name=fileMenu,text=menu.file):
            - JMenuItem(action=newAction)
            - JMenuItem(action=openAction)            
            - JSeparator()
            - JMenuItem(action=saveAction)
            - JSeparator()
            - JMenuItem(action=exitAction)
        - JMenu(name=optionsMenu, text=menu.options):
            - JRadioButtonMenuItem(name=radio1Menu, action=option1Action)
            - JRadioButtonMenuItem(name=radio2Menu, text=menu.option2)
            - JRadioButtonMenuItem(name=radio3Menu, text=menu.option3)
            - ButtonGroup: [radio1Menu, radio2Menu, radio3Menu]
            - JSeparator()
            - JCheckBoxMenuItem(text=menu.option1, onAction=option1)
            - JCheckBoxMenuItem(text=menu.option2)
            - JCheckBoxMenuItem(text=menu.option3)
        - JMenu(name=helpMenu,text=menu.help):
            - JMenuItem(action=helpAboutAction)			
			</codeblock>			 
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="section:4">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="title:4">JMenuBar and JMenuItem</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="p:6">If you do not wish to use Actions, you can create menus by directly specifying the relevant
			properties on JMenuBar and JMenuItem instances:
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="codeblock:5">
JFrame(title=frame.title, iconImage=images/system-lock-screen.png):
    - JMenuBar:
        - JMenu(name=fileMenu,text=menu.file):
            - JMenuItem(name=newMenu, text=menu.file.new, onAction=onFileNew)
            - JMenuItem(name=openMenu, text=menu.file.open, onAction=onFileOpen)            
            - JSeparator()
            - JMenuItem(name=exitMenu, text=menu.file.exit, onAction=exit)
        - JMenu(name=optionsMenu, text=menu.options):
            - JRadioButtonMenuItem(name=radio1Menu, text=menu.option1, onAction=option1)
            - JRadioButtonMenuItem(name=radio2Menu, text=menu.option2)
            - JRadioButtonMenuItem(name=radio3Menu, text=menu.option3)
            - ButtonGroup: [radio1Menu, radio2Menu, radio3Menu]
            - JSeparator()
            - JCheckBoxMenuItem(text=menu.option1, onAction=option1)
            - JCheckBoxMenuItem(text=menu.option2)
            - JCheckBoxMenuItem(text=menu.option3)
        - JMenu(name=helpMenu,text=menu.help):
            - JMenuItem(name=helpAboutMenu,text=menu.help.about,onAction=onHelpAbout)
</codeblock>			
However, we recommend you always use Actions instead.
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="section:5">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="title:5">JPopupMenu</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="p:7">
				Popup menus can easily be added to any Swing component by simply specifying the 
				<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="apiname:7">"popupMenu"</apiname> property to point to an existing 
				<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="apiname:8">JPopupMenu</apiname> instance by name. The Swing JavaBuilder takes care 
				of all the mouse event wiring to popup the menu upon right-click.
				<codeblock spectitle="With actions" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="codeblock:6">
- Action(name=copyAction, text=menu.edit.copy, onAction=copy)
- Action(name=pasteAction, text=menu.edit.paste, onAction=paste)
- JPopupMenu(name=popup):
    - JMenuItem(action=copyAction)
    - JMenuItem(action=pasteAction)
- JTabbedPane(name=tabs, onChange=onTabChanged):
     - JPanel(name=frameYamlSource, tabTitle=tab.frameYamlSource):
         - JScrollPane(name=scroll1): 
               JTextArea(name=frameSourceArea, popupMenu=popup)				
				</codeblock>
				<codeblock spectitle="Without actions" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/actions.menus.dita" xtrc="codeblock:7">
- JPopupMenu(name=popup):
    - JMenuItem(name=popupCopy, text=Copy, onAction=copy)
    - JMenuItem(name=popupPaste, text=Paste, onAction=paste)
- JTabbedPane(name=tabs, onChange=onTabChanged):
     - JPanel(name=frameYamlSource, tabTitle=tab.frameYamlSource):
         - JScrollPane(name=scroll1): 
               JTextArea(name=frameSourceArea, popupMenu=popup)
				</codeblock> 			
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" xtrc="topicref:3" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N1E0006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for swing/border.xml--><topic id="N210006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="title:1">Borders</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="section:1">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="title:2">Regular Borders</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="p:1">
				Any Swing component that allows setting of borders can do it by
				using a set of pre-defined constants:
				<ul class="- topic/ul " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="ul:1">
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="li:1">
						<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="apiname:1">loweredBevel</apiname>
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="li:2">
						<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="apiname:2">raisedBevel</apiname>
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="li:3">
						<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="apiname:3">loweredEtched</apiname>
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="li:4">
						<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="apiname:4">raisedEtched</apiname>
					</li>
				</ul>
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="codeblock:1">
JPanel(name=panel1, border=raisedBevel)
			</codeblock>
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="title:3">Color and Line borders</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="p:2">
				Borders can also be specified using just a line width or a Color /
				line width combination:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="codeblock:2">
- JPanel(name=panel1, border=3)
- JPanel(name=panel1, border=olive 3)
- JPanel(name=panel1, border=ff00ee 3)
		</codeblock>
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="section:3">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="title:4">Titled Border</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="p:3">
				A titled border is a special case, since it has a text associated
				with it. In this case, there is a special property that will
				automatically create a TitledBorder and put the proper text in it,
				namely
				<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="apiname:5">groupTitle</apiname>
				:
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="codeblock:3">
JPanel(name=groupBox1, groupTitle=Customer Data):
    content:
        - JLabel(name=nameLabel, text="Customer name:")
        - JText(name=nameField)			
		</codeblock>
				<note class="- topic/note " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="note:1">
					<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="p:4">
						<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/border.dita" xtrc="apiname:6">groupTitle</apiname>
						is internationalizable, so you can pass a resource key to it,
						instead of a hard-coded String.
					</p>
				</note>
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" xtrc="topicref:4" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N1E0006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for swing/button.group.xml--><topic id="N220006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/button.group.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/button.group.dita" xtrc="title:1">Button Group</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/button.group.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/button.group.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/button.group.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/button.group.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/button.group.dita" xtrc="p:1">
				In order to create a ButtonGroup you just need to define it as a
				collection and pass it the names of buttons that define a group.
				This works for both regular radio buttons as well as radio button
				menu items.
				<codeblock spectitle="Radio buttons" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/button.group.dita" xtrc="codeblock:1">
- JPanel(name=controls):
    - JRadioButton(name=rb1,text=Radio button 1)
    - JRadioButton(name=rb2,text=Radio button 2,selected=true)
    - ButtonGroup: [rb1,rb2]
			</codeblock>
				<codeblock spectitle="Radio button menu items" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/button.group.dita" xtrc="codeblock:2">
- JMenu(name=optionsMenu, text=menu.options):
    - JRadioButtonMenuItem(name=radio1Menu, text=menu.option1, onAction=option1)
    - JRadioButtonMenuItem(name=radio2Menu, text=menu.option2)
    - JRadioButtonMenuItem(name=radio3Menu, text=menu.option3)
    - ButtonGroup: [radio1Menu, radio2Menu, radio3Menu]	
			</codeblock>
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" xtrc="topicref:5" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N1E0006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for swing/colors.xml--><topic id="N230006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/colors.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/colors.dita" xtrc="title:1">Colors</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/colors.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/colors.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/colors.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/colors.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/colors.dita" xtrc="p:1">
			Colors can be specified using a standard HTML/CSS style syntax. Valid values are:
			<codeblock spectitle="Hex Color" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/colors.dita" xtrc="codeblock:1">
JTextArea(name=textArea, background=ff00ee)			
			</codeblock>
			<codeblock spectitle="Short hex color (e.g. f0e gets interpreted as ff00ee)" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/colors.dita" xtrc="codeblock:2">
JTextArea(name=textArea, background=f0e)			
			</codeblock>
			<codeblock spectitle="HTML color name (case-insensitive)" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/colors.dita" xtrc="codeblock:3">
JTextArea(name=textArea, background=olive)		
			</codeblock>
			</p>
		</section>
		<note class="- topic/note " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/colors.dita" xtrc="note:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/colors.dita" xtrc="p:2">HTML color names:
			<xref href="http://www.w3schools.com/html/html_colornames.asp" format="html" scope="external" class="- topic/xref " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/colors.dita" xtrc="xref:1">http://www.w3schools.com/html/html_colornames.asp</xref> 
			</p>
		</note>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" xtrc="topicref:6" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N1E0006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for swing/fonts.xml--><topic id="N240006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/fonts.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/fonts.dita" xtrc="title:1">Fonts</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/fonts.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/fonts.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/fonts.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/fonts.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/fonts.dita" xtrc="p:1">
				Fonts can be specified using a CSS-like syntax: "bold|italic size
				name": 
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/fonts.dita" xtrc="codeblock:1">
JButton(font=italic)
JButton(font=italic bold)
JButton(font=italic 14pt)
JButton(font=Arial)
JButton(font=italic bold 14pt Arial)
				</codeblock>
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" xtrc="topicref:7" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N1E0006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for swing/icons.images.xml--><topic id="N250006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/icons.images.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/icons.images.dita" xtrc="title:1">Icons and images</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/icons.images.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/icons.images.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/icons.images.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/icons.images.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/icons.images.dita" xtrc="p:1">
				Any Swing API that expects an Icon or Image can be expressed by
				simply putting in the image path, relative to the caller class that
				initiated the build process.
				<codeblock spectitle="YAML" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/icons.images.dita" xtrc="codeblock:1">
JMenuItem(text=menu.save, icon=images/document-save.png)
</codeblock>
				Alternatively, if you initialized the builder with a <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/icons.images.dita" xtrc="apiname:1">ResourceBundle</apiname> to activate internationalization,
				you can pass a resource key instead. The builder will look for the path to the image via the key in the bundle instead, e.g.
				<codeblock spectitle="YAML" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/icons.images.dita" xtrc="codeblock:2">
JMenuItem(text=menu.save, icon=images.saveDocument)
				</codeblock>
				<codeblock spectitle="Properties file" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/icons.images.dita" xtrc="codeblock:3">
images.saveDocument=/myapp/resources/images/document-save.png			
				</codeblock>
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" xtrc="topicref:8" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N1E0006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for swing/jframe.xml--><topic id="N260006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="title:1">JFrame</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="p:1">
				<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="apiname:1">JFrame</apiname>
				support in the Swing JavaBuilder adds custom processing for the
				following properties:
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="title:2">size</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="p:2">
				Can be in "width_x_height" format (e.g. 800x400) or
				<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="apiname:2">"packed"</apiname>
				to indicate the
				<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="apiname:3">JFrame.pack()</apiname>method should be called at the end 
(after all the child components have been added), e.g.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="codeblock:1">
JFrame(size=800x400)
JFrame(size=packed)
</codeblock>
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="section:3">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="title:3">state</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="p:3">Allows setting the extended state of a frame, valid values are: 
			<ul class="- topic/ul " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="ul:1">
				<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="li:1"><apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="apiname:4">max</apiname></li>
				<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="li:2"><apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="apiname:5">maxh</apiname></li>
				<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="li:3"><apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="apiname:6">maxv</apiname></li>
				<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="li:4"><apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="apiname:7">icon</apiname></li>
			</ul>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jframe.dita" xtrc="codeblock:2">
JFrame(state=max)			
			</codeblock>
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" xtrc="topicref:9" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N1E0006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for swing/jscrollpane.xml--><topic id="N270006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jscrollpane.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jscrollpane.dita" xtrc="title:1">JScrollPane</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jscrollpane.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jscrollpane.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jscrollpane.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jscrollpane.dita" xtrc="section:1">
		<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jscrollpane.dita" xtrc="p:1">
		Used to wrap components in a scrollable pane. Since it only has one child underneath, it
		is entered not as a YAML list, but a single item:
		<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jscrollpane.dita" xtrc="codeblock:1">
JScrollPane(name=scrollPane1, verticalScrollBarPolicy=asNeeded, horizontalScrollBarPolicy=asNeeded):
     JTextArea(name=textArea)		
		</codeblock>
		You can also use the shorter <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jscrollpane.dita" xtrc="apiname:1">vScrollBar</apiname> and <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jscrollpane.dita" xtrc="apiname:2">hScrollBar</apiname>
		aliases:
		<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jscrollpane.dita" xtrc="codeblock:2">
JScrollPane(name=scrollPane1, vScrollBar=asNeeded, hScrollBar=asNeeded):
     JTextArea(name=textArea		
		</codeblock>
		Valid values for both properties are:
		<ul class="- topic/ul " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jscrollpane.dita" xtrc="ul:1">
			<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jscrollpane.dita" xtrc="li:1"><apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jscrollpane.dita" xtrc="apiname:3">always</apiname></li>
			<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jscrollpane.dita" xtrc="li:2"><apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jscrollpane.dita" xtrc="apiname:4">asNeeded</apiname></li>
			<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jscrollpane.dita" xtrc="li:3"><apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jscrollpane.dita" xtrc="apiname:5">never</apiname></li>
		</ul>
		</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" xtrc="topicref:10" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N1E0006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for swing/jsplitpane.xml--><topic id="N280006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jsplitpane.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jsplitpane.dita" xtrc="title:1">JSplitPane</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jsplitpane.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jsplitpane.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jsplitpane.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jsplitpane.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jsplitpane.dita" xtrc="p:1"> In order to use a JSplitPane just list the child components
				underneath it. The first two will be automatically added as the
				left/right (or top/bottom) panes,e.g.:
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jsplitpane.dita" xtrc="codeblock:1">
JPanel:
    - JSplitPane(name=split1,orientation=verticalSplit):
        - JCustomPanel1(name=panel1)
        - JCustomPanel2(name=panel2)			
			</codeblock>
			The <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jsplitpane.dita" xtrc="apiname:1">orientation</apiname> property's <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jsplitpane.dita" xtrc="apiname:2">verticalSplit</apiname> or
			<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jsplitpane.dita" xtrc="apiname:3">horizontalSplit</apiname> values define the type of split.
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" xtrc="topicref:11" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N1E0006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for swing/jtabbedpane.xml--><topic id="N290006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtabbedpane.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtabbedpane.dita" xtrc="title:1">JTabbedPane</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtabbedpane.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtabbedpane.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtabbedpane.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtabbedpane.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtabbedpane.dita" xtrc="p:1">
				In order to create tab pages, just list the controls you wants as
				tabs underneath the JTabbedPane node. In order to specify the tab
				title, tooltip and icon use the following properties:
				<ul class="- topic/ul " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtabbedpane.dita" xtrc="ul:1">
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtabbedpane.dita" xtrc="li:1">
						<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtabbedpane.dita" xtrc="apiname:1">tabTitle</apiname> (localizable)
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtabbedpane.dita" xtrc="li:2">
						<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtabbedpane.dita" xtrc="apiname:2">tabToolTip</apiname> (localizable)
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtabbedpane.dita" xtrc="li:3">
						<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtabbedpane.dita" xtrc="apiname:3">tabIcon</apiname>
					</li>
					<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtabbedpane.dita" xtrc="li:4">
						<apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtabbedpane.dita" xtrc="apiname:4">tabEnabled</apiname>
					</li>
				</ul>
				Those are used only if a component is listed underneath a
				JTabbedPane and are ignored if used anywhere else.
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtabbedpane.dita" xtrc="codeblock:1">
- JTabbedPane(name=tabs):
    - JPanel(tabTitle=tab.frameYamlSource, tabIcon=images/tab1.png):
				</codeblock>
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" xtrc="topicref:12" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N1E0006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for swing/jtable.xml--><topic id="N2A0006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtable.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtable.dita" xtrc="title:1">JTable</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtable.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtable.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtable.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtable.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtable.dita" xtrc="p:1"> JTable provides an easy way to create table columns, by just
				specifying a list of TableColumn objects underneath it, e.g.:
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/jtable.dita" xtrc="codeblock:1">
JPanel:
    - JScrollPane(name=scroll2): 
        JTable(name=table1):
            - TableColumn(name=col1,resizable=true, headerValue=Column 1)
            - TableColumn(name=col2,resizable=true, headerValue=Column 2)
            - TableColumn(name=col2,resizable=false, headerValue=Column 3)			
			</codeblock>
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" xtrc="topicref:13" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N1E0006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for swing/event.handlers.xml--><topic id="N2B0006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="title:1">Event handlers</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="section:1">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="title:2">Event handlers</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="p:1">
				Here's a complete list of event handlers by component type. Next to
				them is also the
				event-specific class that can get passed to your Java method if you require it
				(just remember
				to make it part of the method's signature), e.g.
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="codeblock:1">
private void someButtonClicked() {
	//...one valid signature...
}				
				
private void someButtonClicked(ActionEvent evt) {
	//...another valid signature ...
}

private void someButtonClicked(JButton source) {
	//...another valid signature ...
}

private void someButtonClicked(JButton source, Action evt) {
	//...yet another valid signature ...
}
			</codeblock>
			</p>
		</section>

		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="title:3">Action</title>
			<simpletable class="- topic/simpletable " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="simpletable:1">
				<sthead class="- topic/sthead " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="sthead:1">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:1">Name</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:2">Event Class</stentry>
				</sthead>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:1">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:3">onAction</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:4">ActionEvent</stentry>
				</strow>
			</simpletable>			
		</section>
		
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="section:3">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="title:4">(Abstract)Button</title>
			<simpletable class="- topic/simpletable " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="simpletable:2">
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:2">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:5">onAction</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:6">ActionEvent</stentry>
				</strow>
			</simpletable>			
		</section>

		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="section:4">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="title:5">Component</title>
			<simpletable class="- topic/simpletable " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="simpletable:3">
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:3">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:7">onFocus</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:8">FocusEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:4">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:9">onFocusLost</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:10">FocusEvent</stentry>
				</strow>

				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:5">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:11">onKeyPressed</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:12">KeyEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:6">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:13">onKeyReleased</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:14">KeyEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:7">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:15">onKeyTyped</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:16">KeyEvent</stentry>
				</strow>

				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:8">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:17">onMouseClicked</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:18">MouseEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:9">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:19">onMouseDoubleClicked</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:20">MouseEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:10">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:21">onMouseDragged</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:22">MouseEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:11">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:23">onMouseEntered</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:24">MouseEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:12">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:25">onMouseExited</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:26">MouseEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:13">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:27">onMouseMoved</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:28">MouseEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:14">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:29">onMousePressed</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:30">MouseEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:15">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:31">onMouseReleased</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:32">MouseEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:16">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:33">onMouseRightClicked</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:34">MouseEvent</stentry>
				</strow>

				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:17">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:35">onMouseWheelMoved</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:36">MouseWheelEvent</stentry>
				</strow>

			</simpletable>			
		</section>

		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="section:5">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="title:6">JComboBox</title>
			<simpletable class="- topic/simpletable " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="simpletable:4">
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:18">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:37">onAction</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:38">ActionEvent</stentry>
				</strow>
			</simpletable>			
		</section>
		
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="section:6">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="title:7">JFrame</title>
			<simpletable class="- topic/simpletable " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="simpletable:5">
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:19">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:39">onStateChanged</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:40">WindowEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:20">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:41">onWindowActivated</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:42">WindowEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:21">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:43">onWindowClosed</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:44">WindowEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:22">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:45">onWindowClosing</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:46">WindowEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:23">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:47">onWindowDeactivated</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:48">WindowEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:24">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:49">onWindowDeiconified</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:50">WindowEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:25">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:51">onWindowFocus</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:52">WindowEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:26">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:53">onWindowFocusLost</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:54">WindowEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:27">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:55">onWindowIconified</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:56">WindowEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:28">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:57">onWindowOpened</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:58">WindowEvent</stentry>
				</strow>
			</simpletable>
		</section>		
		
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="section:7">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="title:8">JTabbedPane</title>
			<simpletable class="- topic/simpletable " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="simpletable:6">
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:29">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:59">onChange</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:60">ChangeEvent</stentry>
				</strow>
			</simpletable>			
		</section>		
		
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="section:8">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="title:9">JTable</title>
			<simpletable class="- topic/simpletable " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="simpletable:7">
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:30">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:61">onSelection</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:62">ListSelectionEvent</stentry>
				</strow>
			</simpletable>			
		</section>		
		
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="section:9">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="title:10">JTextField</title>
			<simpletable class="- topic/simpletable " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="simpletable:8">
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:31">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:63">onAction</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:64">ActionEvent</stentry>
				</strow>
			</simpletable>			
		</section>		

		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="section:10">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="title:11">JTree</title>
			<simpletable class="- topic/simpletable " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="simpletable:9">
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:32">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:65">onSelection</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:66">TreeSelectionEvent</stentry>
				</strow>
			</simpletable>			
		</section>				
				
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="section:11">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="title:12">JTree</title>
			<simpletable class="- topic/simpletable " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="simpletable:10">
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:33">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:67">onSelection</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:68">TreeSelectionEvent</stentry>
				</strow>
			</simpletable>			
		</section>				
				
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="section:12">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="title:13">Window</title>
			<simpletable class="- topic/simpletable " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="simpletable:11">
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:34">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:69">onStateChanged</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:70">WindowEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:35">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:71">onWindowActivated</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:72">WindowEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:36">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:73">onWindowClosed</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:74">WindowEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:37">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:75">onWindowClosing</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:76">WindowEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:38">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:77">onWindowDeactivated</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:78">WindowEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:39">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:79">onWindowDeiconified</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:80">WindowEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:40">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:81">onWindowFocus</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:82">WindowEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:41">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:83">onWindowFocusLost</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:84">WindowEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:42">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:85">onWindowIconified</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:86">WindowEvent</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="strow:43">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:87">onWindowOpened</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/event.handlers.dita" xtrc="stentry:88">WindowEvent</stentry>
				</strow>
			</simpletable>
		</section>				
				

	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" xtrc="topicref:14" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.features.ditamap" href="#N1E0006" role="parent"/></linkpool></related-links></topic></topic><!--Start of imbed for swing/swing.layout.xml--><topic id="N2C0006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.layout.dita" xtrc="topic:1" refclass="- map/topicref bookmap/chapter "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.layout.dita" xtrc="title:1">Swing Layout Management</title><prolog class="- topic/prolog " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.layout.dita" xtrc="prolog:1">
		<author class="- topic/author " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.layout.dita" xtrc="author:1">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.layout.dita" xtrc="body:1">
		<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.layout.dita" xtrc="p:1">Layout management is one of the biggest pain points in any UI development. The Swing JavaBuilder solves
		it by using a simple DSL (Domain Specific Language) that runs on top of the brilliant MigLayout layout manager.</p>
		<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/swing.layout.dita" xtrc="p:2">After using MigLayout you will never go back to any other JDK layout manager, it makes them all obsolete.</p> 
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" xtrc="chapter:7" mapkeyref="swing.javabuilder"><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" xtrc="chapter:7"><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" href="#N2D0006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:2" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" href="#N2E0006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:3" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" href="#N2F0006" role="child"/><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:4" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" href="#N300006" role="child"/></linkpool></linkpool></related-links><!--Start of imbed for core/miglayout.dsl.xml--><topic id="N2D0006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="title:1">MigLayout DSL</title><prolog class="- topic/prolog " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="prolog:1">
		<author class="- topic/author " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="author:1">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="section:1">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="title:2">What is MigLayout?</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="p:1">MigLayout is a revolutionary layout manager for Swing and SWT, written by Mikael Grev and released
			under the open source BSD license. It revolutionizes layout management by making
			it much more dynamic and thus greatly reducing the number of lines of code one
			has to write, even for very complex layouts.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="p:2">MigLayout is available for download from
<xref href="http://miglayout.com" format="html" scope="external" class="- topic/xref " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="xref:1">http://miglayout.com</xref>. We recommend to read the Cheat Sheet and introduction to MigLayout
			available on that website. Once you try MigLayout you can never go back to archaic
			layout managers such as GridBagLayout or GroupLayout. It even makes the formidable
			JGoodies Forms layout manager obsolete.</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="title:3">Visual MigLayout DSL syntax (a GUI builder in pure text)</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="p:3">The visual layout DSL is basically a way to have a GUI builder, but in a pure text format. 
			In short, it allows you to define controls' layout in a text file (by using their names) and from 
			their relative alignments and number of rows, the builder will attempt to automatically figure out 
			how many rows/columns there are, which control goes into which cell, whether it should be 
			left/top/right/center aligned, how many cells should it span, etc.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="p:4">The layout DSL translates the constraints into standard MigLayout constraints, 
			hence this is basically nothing more than a visual text-based interface to the full power 
			of MigLayout.</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="section:3">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="title:4">Quick Example</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="p:5">Let's say we need to create a simple dialog with 3 rows: a table/text field in the first two rows, 
			and OK/Cancel buttons (right aligned) in the last row.
			<image href="core/img/miglayout.simple.1.gif" placement="break" class="- topic/image " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="image:1"/>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="codeblock:1">
MigLayout: |                                          
    [[insets 8]                                    
    [pref]            [grow]                       
    &gt;firstNameLabel   firstName
    &gt;lastNameLabel    lastName
    &gt;okButton+*,cancelButton     [growy, bottom]   
    {okButton: tag OK, cancelButton: tag Cancel}   
			</codeblock>
			</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="p:6">
			From this you can probably see right away that we have 3 rows (as in 3 lines of text), the labels are in the same vertical column, the text fields are in the same vertical column (which is flagged to "grow", a standard MigLayout constraint).
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="section:4">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="title:5">General format</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="p:7">
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="codeblock:2">
MigLayout: |
    [[global layout constraints]]                              #optional
    [column constraints]   [another column's constraints]      #optional
    control1               control2                            [row constraint - optional]
    control3               control4
    {control1: specific MigLayout constraint (e.g. baseline) } #optional
</codeblock>	
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="section:5">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="title:6">Alignment</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="p:8">
			Goes before the control name, e.g. "&gt;fieldNameLabel". If none are presents it defaults to "top, left".
			<simpletable class="- topic/simpletable " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="simpletable:1">
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="strow:1">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="stentry:1">&lt;</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="stentry:2">horizontally left aligned (can be omitted, it is the default value)</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="strow:2">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="stentry:3">&lt;</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="stentry:4">horizontally left aligned (can be omitted, it is the default value)</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="strow:3">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="stentry:5">&gt;</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="stentry:6">horizontally right aligned</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="strow:4">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="stentry:7">|</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="stentry:8">horizontally centered</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="strow:5">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="stentry:9">-</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="stentry:10">vertically centered</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="strow:6">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="stentry:11">/</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="stentry:12">vertically bottom aligned</stentry>
				</strow>
				<strow class="- topic/strow " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="strow:7">
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="stentry:13">^</stentry>
					<stentry class="- topic/stentry " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="stentry:14">vertically top aligned (usually omitted, use only when needed to override the default, e.g. "baseline" in MigLayout)</stentry>
				</strow>
			</simpletable>
			</p>
		</section>
		
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="section:6">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="title:7">Cell Spanning</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="p:9">In "+X+Y" format (X= horizontal cells to span, Y= vertical cells to span), e.g. "okButton+2".</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="p:10">Examples:
			<ul class="- topic/ul " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="ul:1">
				<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="li:1"><codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="codeph:1">+*</codeph> : horizontally span rest of row (e.g. "okButton+*")</li>
				<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="li:2"><codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="codeph:2">+2</codeph> : horizontally span 2 cells</li>
				<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="li:3"><codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="codeph:3">+2+4</codeph>: horizontally span 2 cells, vertically span 4 cells</li>
				<li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="li:4"><codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="codeph:4">+2+*</codeph>: horizontally span 2 cells, vertically span the the rest of the column</li>
			</ul>
			</p>
		</section>

		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="section:7">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="title:8">Cell Splitting</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="p:11">In <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="codeph:5">"controlName1,controlName2"</codeph> format (i.e. control names separated with a comma). 
			Used when you want to place multiple controls into the same cell. All the general cell constraints 
			(alignment, spanning, etc.) are applied to the first control, e.g. <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="codeph:6">okButton+*,cancelButton"</codeph>.
			</p>
		</section>
		
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="section:8">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="title:9">Size Groups</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="p:12">In <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="codeph:7">"=X"</codeph> format (X = size group number), e.g. "okButton=1 cancelButton=1"</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="p:13">Allows to specify which controls should have the same preferred size. Useful especially when you want different command buttons 
			to have the same size (e.g. OK and Cancel).
			There is also support for horizontal and vertical size groups (i.e. those that apply only to common width and/or height, 
			instead of both), but it's not quite there yet. It is defined by appending an 'x' or 'y' after the size group, e.g.:
			<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="codeph:8">okButton=1x cancelButton=1x`</codeph>
			</p>
		</section>
		
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="section:9">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="title:10">Complex Example</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="p:14">
				From John O'Conners Layout Manager Challenge: 
				<xref href="http://weblogs.java.net/blog/joconner/archive/2006/10/layout_manager.html" format="html" scope="external" class="- topic/xref " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="xref:2">http://weblogs.java.net/blog/joconner/archive/2006/10/layout_manager.html</xref>
				<image href="core/img/addressbookdemo_mac.gif" placement="inline" class="- topic/image " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="image:2"/>
			</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="p:15">Here's how it would look implemented in the Swing JavaBuilder:
			<image href="core/img/miglayout.complex.1.gif" placement="inline" class="- topic/image " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="image:3"/>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dsl.dita" xtrc="codeblock:3">
JPanel:
    - JScrollPane(name=scroll1): 
        JTextArea(name=source,font=Monospaced,editable=false)
    - JLabel(name=lNameLbl, text=Last Name)
    - JLabel(name=fNameLbl, text=First Name)
    - JLabel(name=phoneLbl, text=Phone)
    - JLabel(name=emailLbl, text=Email)
    - JLabel(name=address1Lbl, text=Address 1)
    - JLabel(name=address2Lbl, text=Address 2)
    - JLabel(name=cityLbl, text=City)
    - JLabel(name=stateLbl, text=State)
    - JLabel(name=postalLbl, text=Postal Code)
    - JLabel(name=countryLbl, text=Country)
    - JTextField(name=lName)
    - JTextField(name=fName)
    - JTextField(name=phone)
    - JTextField(name=email)
    - JTextField(name=address1)
    - JTextField(name=address2)
    - JTextField(name=city)
    - JTextField(name=state)
    - JTextField(name=postal)
    - JTextField(name=country)
    - JButton(name=newBtn, text=New)
    - JButton(name=deleteBtn, text=Delete)
    - JButton(name=editBtn, text=Edit)
    - JButton(name=saveBtn, text=Save)
    - JButton(name=cancelBtn, text=Cancel)
    - MigLayout: |
       [200,grow]               [200,grow]               [200,grow]
       scroll1+1+* &gt;lNameLbl    lName       fNameLbl     fName                              
                   &gt;phoneLbl    phone       emailLbl+2,email               
                   &gt;address1Lbl address1+*                                  
                   &gt;address2Lbl address2+*                                  
                   &gt;cityLbl     city                       
                   &gt;stateLbl    state       postalLbl    postal
                   &gt;countryLbl  country                                   
                   ^|newBtn+*=1,^deleteBtn=1,^editBtn=1,^saveBtn=1,^cancelBtn=1  [grow]			
			</codeblock>
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" xtrc="topicref:1" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="chapter:7" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" href="#N2C0006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for core/miglayout.xml--><topic id="N2E0006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dita" xtrc="title:1">MigLayout</title><prolog class="- topic/prolog " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dita" xtrc="prolog:1">
		<author class="- topic/author " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dita" xtrc="author:1">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dita" xtrc="p:1">
			If for whatever reason you do not want to use the MigLayout DSL, you can still use regular MigLayout
			properties and syntax, e.g.:
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/miglayout.dita" xtrc="codeblock:1">
JFrame(title=My Frame):
    content:
        - JLabel(name=firstNameLabel,text=First Name)
        - JTextField(name=firstName)
        - JLabel(name=lastNameLabel,text=Last Name)
        - JTextField(name=lastName)
        - JButton(name=okButton)
        - MigLayout:
            layoutConstraints: wrap 2          #general layout constraints
            columnConstraints: [] [grow] []    #general column constraints
            rowConstraints: [] [] []           #general row constraints
            constraints:
                - firstNameLabel: right
                - firstName: 200px, sg 1
                - lastNameLabel: right
                - lastName: 200px, sg 1
                - okButton: span, right, tag ok			
			</codeblock>
			But we recommend you always use the DSL syntax instead, it's much more powerful and easier to
			use after the initial learning curve.
			</p>
			
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" xtrc="topicref:2" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="chapter:7" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" href="#N2C0006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for swing/cardlayout.xml--><topic id="N2F0006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/cardlayout.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/cardlayout.dita" xtrc="title:1">CardLayout</title><prolog class="- topic/prolog " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/cardlayout.dita" xtrc="prolog:1">
		<author class="- topic/author " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/cardlayout.dita" xtrc="author:1">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/cardlayout.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/cardlayout.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/cardlayout.dita" xtrc="p:1">
			CardLayout support is provided by adding a CardLayout node at the end of the list of child components, e.g.
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/cardlayout.dita" xtrc="codeblock:1">
JPanel:
    - JPanel(name=panel1)
    - JPanel(name=panel2)
    - CardLayout(name=cards): [panel1,panel2]			
			</codeblock>
			</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/cardlayout.dita" xtrc="p:2">
By default the card name is the same as the name of the control that was added as a card. 
Using the "name" property you can get a handle to the created instance of CardLayout in your Java-side code, e.g.
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/cardlayout.dita" xtrc="codeblock:2">
private CardLayout cards;
</codeblock>			
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" xtrc="topicref:3" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="chapter:7" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" href="#N2C0006" role="parent"/></linkpool></related-links></topic><!--Start of imbed for swing/flowlayout.xml--><topic id="N300006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/flowlayout.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/flowlayout.dita" xtrc="title:1">FlowLayout</title><prolog class="- topic/prolog " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/flowlayout.dita" xtrc="prolog:1">
		<author class="- topic/author " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/flowlayout.dita" xtrc="author:1">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/flowlayout.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/flowlayout.dita" xtrc="section:1">
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/flowlayout.dita" xtrc="p:1">
In order to use FlowLayout, just create a FlowLayout node at the end of the list of child components. 
No need to specify which ones to add, they all get added automatically, e.g.:
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/flowlayout.dita" xtrc="codeblock:1">
JPanel:
   - JPanel(name=panel1,groupTitle=Flow layout components):
      - JLabel(text=Label 1)
      - JButton(text=Button 1)
      - JLabel(text=Label 2)
      - JButton(text=Button 2)
      - JLabel(text=Label 3)
      - JButton(text=Button 4)
      - JLabel(text=Label 5)
      - JButton(text=Button 5)
      - FlowLayout(alignment=left,hgap=30,vgap=30,alignOnBaseline=true)			</codeblock>
			</p>
		</section>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" xtrc="topicref:4" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="0.3" type="" xtrc="chapter:7" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" href="#N2C0006" role="parent"/></linkpool></related-links></topic></topic><!--Start of imbed for core/extending.xml--><topic id="N310006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="topic:1" refclass="- map/topicref bookmap/chapter "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="title:1">Extending the JavaBuilders engine</title><prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="section:1">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="title:2">Overview</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="p:1">The core JavaBuilders engine is domain-agnostic, i.e. there is no logic in it
			specific to any particular toolkit such as Swing or SWT. Each of domain-specific
			builders (such as the Swing JavaBuilder or the SWT JavaBuilder) are just thin proxies
			for the common <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="codeph:1">Builder</codeph> APIs which pass along a pre-configured instance of a 
			<codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="codeph:2">BuilderConfig</codeph> object, which contains all the component types
			and custom handlers for each UI toolkit.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="p:2">This builder configuration object is usually exposed via the static <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="codeph:3">getConfig()</codeph>
			method on the builder, e.g. <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="codeph:4">SwingJavaBuilder.getConfig()</codeph>.</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="p:3">By manipulating its properties you can change the default configuration, register
			new object types, customized handlers for particular controls or particular properties
			of a control.</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="title:3">Registering new component types</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="p:4">All you need to do is call the <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="codeph:5">BuilderConfig.addType(Class clazz)</codeph>
			method, presumably from your application's <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="codeph:6">main()</codeph>:
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="codeblock:1">
SwingJavaBuilder.getConfig().addType(MyCustomComponent.class);
			</codeblock>			
			and then you can start referring to it directly in the YAML file:
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="codeblock:2">
MyCustomClass(property1=value1,property2=value2, etc...)			
			</codeblock>
			You can also add it with a specific alias to avoid name collision (by default it takes the simple class name): 
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="codeblock:3">
SwingJavaBuilder.getConfig().addType("CustomClassAlias",MyCustomClass.class);
			</codeblock>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.dita" xtrc="codeblock:4">
CustomClassAlias(property1=value1,property2=value2, etc...)			
			</codeblock>
			</p>
		</section>
	</body></topic><!--Start of imbed for swing/appendix/appendix.xml--><topic id="N320006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/appendix/appendix.dita" xtrc="topic:1" refclass="- map/topicref bookmap/appendix "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/appendix/appendix.dita" xtrc="title:1">Appendix</title><prolog class="- topic/prolog " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/appendix/appendix.dita" xtrc="prolog:1">
		<author class="- topic/author " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/appendix/appendix.dita" xtrc="author:1">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/appendix/appendix.dita" xtrc="body:1"/><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/extending.ditamap" xtrc="topicref:1" mapkeyref="swing.javabuilder"/><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" xtrc="appendix:1" mapkeyref="swing.javabuilder"><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" xtrc="appendix:1"><link class="- topic/link " mapclass="- map/topicref " rev="0.3" type="" xtrc="topicref:5" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" href="#N340006" role="child"/></linkpool></linkpool></related-links><!--Start of imbed for swing/appendix/layout.samples.xml--><topic id="N340006" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/appendix/layout.samples.dita" xtrc="topic:1" refclass="- map/topicref "><title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/appendix/layout.samples.dita" xtrc="title:1">Layout Samples</title><prolog class="- topic/prolog " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/appendix/layout.samples.dita" xtrc="prolog:1">
		<author class="- topic/author " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/appendix/layout.samples.dita" xtrc="author:1">Jacek Furmankiewicz</author>
	</prolog><body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/appendix/layout.samples.dita" xtrc="body:1">
		<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/appendix/layout.samples.dita" xtrc="p:1">Layout Samples</p>
	</body><related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" xtrc="topicref:5" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/appendix " rev="0.3" type="" xtrc="appendix:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" href="#N320006" role="parent"/></linkpool></related-links></topic></topic><backmatter class="- map/topicref bookmap/backmatter " rev="0.3" toc="yes" xtrc="backmatter:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap"><booklists class="- map/topicref bookmap/booklists " rev="0.3" toc="yes" xtrc="booklists:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap"><indexlist class="- map/topicref bookmap/indexlist " rev="0.3" toc="yes" xtrc="indexlist:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap"/></booklists></backmatter></bookmap>