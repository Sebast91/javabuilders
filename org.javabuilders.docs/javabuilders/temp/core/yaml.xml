<?xml version="1.0" encoding="utf-8"?><?workdir /media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/temp/core?>
<?path2project ../?>
<topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="id20081224084930" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="topic:1">
	<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="title:1">YAML</title>
	<prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita">Jacek Furmankiewicz</author>
	</prolog>
	<body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="section:1">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="title:2">What is YAML?</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:1">
				I discovered YAML while reading about Ruby on Rails. It is used by
				that web framework as the default file format for all configuration
				files. It has a very simple approach to define hierarchical data
				structures/maps/list, based on straightforward whitespace
				indentation. Also, it handles text transparently. There is usually
				no need to input text in quotes, you can just type it as is, e.g.
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:1">text: This is the text for my control</codeblock>
				The only time you need to escape into quotes is if your text
				contains YAML-reserved characters such as ":", e.g.
				<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:2"> text: "First name:"</codeblock>
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="title:3">Whitespace indentation</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:2">Unless you are a Python programmer, the concept of anything
				that relies on whitespace probably makes you uncomfortable. Trust
				me, it's actually very simple to get used to it, does not require
				any particularly specialized development tools. The main benefit of
				whitespace indentation is that it automatically handles defining the
				"end" of an item (hence there is no need for XML-closing tags or
				JSON-closing brackets).</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="section:3">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="title:4">Why not XML?</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:3">It is simply too verbose. Too much typing. Most of the file
				seems to be tags and closing tags instead of the content. In YAML
				the majority of the file is the actual content (and the whitespace
				of course).</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="section:4">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="title:5">Why not JSON?</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:4">JSON is very concise and the perfect tool for let's say
				invoking Ajax requests. However, for maintainable files it suffers
				from what I call "closing bracket hell", especially when dealing
				with complex object graphs. Every type needs to be closed with a "}"
				and every collection needs to be opened and closed with a "[" and
				"]". Once you start mixing the two together you start having
				horrendous closing statements such as this:</p>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:3">              }
             }
            ]
           }
          ]
         }
        ]
       }
				</codeblock>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:5">Scroll to the bottom of this JavaFX code sample to see what
				I mean: http://jfx.wikia.com/wiki/JFXPresentation</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="section:5">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="title:6">YAML is a superset of JSON</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:6"> Although YAML relies on whitespace indentation to indicate
				hierarchy, you can at any point in the document switch to JSON-style
				brackets. This allows to keep the file shorter and more concise and
				should be used on all bottom-level nodes (i.e. those that have no
				children).</p>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:7">Pure whitespace YAML example:</p>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:4">
JFrame:
   name: myFrame
   title: My Frame
   content:
       - JLabel: 
           name: myLabel2
           text: My First Label
       - JLabel:
           name: myLabel2
           text: My Second Label				
			</codeblock>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:8">The same content can be compressed using JSON-style brackets
				to:</p>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:5">
JFrame:
   name: myFrame
   title: My Frame
   content:
       - JLabel: {name: myLabel2, text: My First Label}
       - JLabel: {name: myLabel2, text: My Second Label}			
			</codeblock>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:9">However, in most cases you will not be coding in either
				traditional YAML or JSON. We have enhanced the standard YAML syntax
				to make it even more compact (more on that in the next sections). In
				most cases your YAML content will look like this:</p>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:6">
JFrame(name=myFrame,title=My Frame):
    - JLabel(name=myLabel2, text=My First Label)
    - JLabel(name=myLabel2, text=My Second Label)			
			</codeblock>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:10">This is still valid YAML syntax and our custom YAML
				pre-processor takes care of "exploding" this compact syntax to the
				equivalent "full" YAML content</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="section:6">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="title:7">Tabs in YAML</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:11">Tabs are simply not allowed in YAML, period. You always indent
				using explicit whitespace. Putting a tab into a YAML file will cause
				it to fail to parse</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="section:7">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="title:8">YAML syntax samples</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:12">Values:</p>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:7"> text: Some text</codeblock>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:13">Maps:</p>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:8">
JFrame:
   name: myFrame
   title: My Frame			
			</codeblock>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:14">Lists (via the "-" indicator):</p>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:9">
    content:
        - Item1
        - Item2 : {somePropertyForItem2: someValueforItem2}			
			</codeblock>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:15">Free-form text with new lines preserved (accomplished
				with the "|" indicator):</p>
			<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="codeblock:10">
   quote: |
      To code by hand or not?
      There is no question.
      You should just be using JavaBuilders.
                   Will Shakespeare (JavaBuilders early adopter)			
			</codeblock>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="section:8">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="title:9">Related links</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="p:16">YAML on Wikipedia:
			<xref href="http://en.wikipedia.org/wiki/YAML" format="html" scope="external" class="- topic/xref " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/yaml.dita" xtrc="xref:1">http://en.wikipedia.org/wiki/YAML</xref>
			</p>
		</section>

	</body>
<related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" xtrc="topicref:2" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="1.0.DEV" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/overview.ditamap" href="../core/overview.xml" role="parent"/></linkpool></related-links>
</topic>