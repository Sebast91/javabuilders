<?xml version="1.0" encoding="utf-8"?><?workdir /media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/temp/core?>
<?path2project ../?>
<topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="id20081226114356" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="topic:1">
	<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="title:1">Hooking up event listeners to Java methods</title>
	<prolog class="- topic/prolog " xtrc="prolog:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita">
		<author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap">Jacek Furmankiewicz</author><author class="- topic/author " xtrc="author:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita">Jacek Furmankiewicz</author>
	</prolog>
	<body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="body:1">
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="section:1">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="title:2">Overview</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="p:1">
				The standard approach is to provide a standard "onEvent" property
				(e.g. "onAction", "onClicked", "onDoubleClicked") and then pass it a
				single method name or a collection of method names.
				<codeblock spectitle="Single method" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="codeblock:1">
JButton(text=OK, onAction=save)		
		</codeblock>
				<codeblock spectitle="Multiple methods to be executed in sequence" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="codeblock:2">
JButton(text=OK, onAction=[validateInput,save,close])
		</codeblock>
				If any of the methods return a boolean
				<b class="+ topic/ph hi-d/b " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="b:1">false</b>
				, then the other methods get aborted and will not be called. Simple
				convention over configuration approach
			</p>
		</section>
		<section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="section:2">
			<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="title:3">Mapping to methods on the Java side</title>
			<p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="p:2">
				When you specify a method name (e.g. "save") in the YAML file, it
				will attempt to execute the corresponding method in the Java class.
				Different signatures of the method are supported, in order of
				preference:
				<codeblock spectitle="method(calling object type or its superclass, event specific class)" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="codeblock:3">
private void save(JButton button, ActionEvent event) {}		
		</codeblock>
				<codeblock spectitle="method(event specific class)" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="codeblock:4">
private void save(ActionEvent event) {}
		</codeblock>
		<codeblock spectitle="method(calling object type or its superclass)" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="codeblock:5">
private void save(JButton button) {}		
		</codeblock>
<codeblock spectitle="method()" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="codeblock:6">
private void save() {}		
		</codeblock>		
Enter whichever one you want and JavaBuilders will find it and execute it. 
If it finds multiple ones, it will execute the first one it finds based on the preference above.
If none are found, a BuildException will  be thrown <b class="+ topic/ph hi-d/b " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/event.handling.dita" xtrc="b:2">right away during build time</b>. So, you do
not have to actually test your event listener logic by manually clicking on the button or menu item,
the validation occurs right away as part of the build process. This simplifies unit testing and limits
the risk of lost type safety.
			</p>
		</section>
	</body>
<related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" xtrc="topicref:3" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="1.0.DEV" type="" xtrc="topicref:1" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/core/core.features.ditamap" href="../core/core.features.xml" role="parent"/></linkpool></related-links>
</topic>