<?xml version="1.0" encoding="utf-8"?><?workdir /media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/temp/swing?>
<?path2project ../?>
<topic xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" id="o8qdqx3m4lw3" xml:lang="en-CA" ditaarch:DITAArchVersion="1.1" domains="(topic ui-d) (topic hi-d) (topic pr-d) (topic sw-d)                          (topic ut-d) (topic indexing-d)" class="- topic/topic " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="topic:1">
	<title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="title:1">JTable</title>
	<prolog class="- topic/prolog " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="prolog:1">
		<author class="- topic/author " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="author:1">Jacek Furmankiewicz</author>
	</prolog>
	<body class="- topic/body " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="body:1">
	   <section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="section:1">
	       <title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="title:2">EventTableModel</title>
	       <p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="p:1">
	       The <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="apiname:1">JTable</apiname>-specific model in GlazedLists is called <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="apiname:2">EventTableModel</apiname>.
	       You will need to define a GlazedLists <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="apiname:3">EventList</apiname> in your Java code to hold the master
	       list of objects and point the <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="apiname:4">EventTableModel.source</apiname> property in the YAML file to it.
	       <codeblock spectitle="Java" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="codeblock:1">
public class Person {

    private String firstName;
    private String lastName;
    private Date birthDate;
    
    //getters and setters for all properties...
}

public class GlazedListJListPanel extends JPanel {

    private EventList&lt;Person&gt; values = new BasicEventList&lt;Person&gt;();
    private BuildResult result;
    
    public GlazedListJListPanel() {
        result = SwingJavaBuilder.build(this);
    }
}
	       </codeblock>
	       <codeblock spectitle="YAML" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="codeblock:2">
JPanel:
    - JTable(name=list): 
         - EventTableModel(name=model,source=values)	       
	       </codeblock>
	       When you add/remove items in your <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="apiname:5">EventList</apiname>, they will automatically be propagated to the
	       <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="apiname:6">JTable</apiname> <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="apiname:7">EventTableModel</apiname>.
	       </p>
	   </section>
	   <section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="section:2">
	       <title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="title:3">Controlling table columns</title>
	       <p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="p:2">
	       The sample code shown above displays by default all properties that can be found in the <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="codeph:1">Person</codeph> POJO
	       as table columns. Usually though you would want to maintain some control over that, as well as customize
	       certain parameters of the column (e.g. the header string). The simplest way to accomplish this is to define a
	       <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="apiname:8">columns=[]</apiname> element: 
<codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="codeblock:3">
JPanel:
    - JTable(name=list): 
        - EventTableModel(name=model,source=values,columns=[firstName,lastName])
</codeblock>	       
	       The example above will display only the "firstName" and "lastName" properties as columns.
	       Alternatively, you can to explicitly define
	       the <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="apiname:9">TableColumn</apiname> instances:
           <codeblock spectitle="YAML" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="codeblock:4">
JPanel:
    - JTable(name=list): 
        - EventTableModel(name=model,source=values)
        - TableColumn(name=firstName,headerValue=column.firstName)
        - TableColumn(name=lastName,headerValue=column.lastName)           
           </codeblock>
           Since the <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="codeph:2">"headerValue"</codeph> column is localizable, it will automatically fetch the corresponding
           string key from the configured resource bundles.
	       </p>
	       <p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="p:3">Yet another option is to define all the columns you need via <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="apiname:10">columns=[]</apiname> and then just
	       define the <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="apiname:11">TableColumn</apiname>instance if you need to customize it further (e.g. add a cell renderer or editor).</p>
	   </section>
	   <section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="section:3">
	       <title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="title:4">Localizing column headers</title>
	       <p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="p:4">
	       When you define a list of columns in the <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="apiname:12">columns=[]</apiname> parameter, the builder will attempt to automatically
	       look up the header name for it using the following strategy:
	       <ol class="- topic/ol " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="ol:1">
	           <li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="li:1">look for a resource key euqal to "SimpleClassName.PropertyName", e.g. "Person.firstName"</li>
	           <li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="li:2">look for a resource key equal to "PropertyName", e.g. "firstName"</li>
	           <li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="li:3">if no resource keys are found, attempt to build a header directly from the property name, 
	           e.g. "firstName" becomes "First Name"</li>
	       </ol>
	       </p>
	   </section>
       <section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="section:4">
           <title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="title:5">Handling duplicate column names</title>
           <p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="p:5">
           Within a single YAML file, all object names must be unique. So what happens if we have let's say two tables that
           display data from different POJOs (or maybe different views of the same POJO) that happen to have the same names?
           In this particular case, you can use the <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="codeph:3">"source"</codeph> property of the <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="apiname:13">TableColumn</apiname> level.
           If this property is defined, the builder will use that instead of <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="codeph:4">"name"</codeph> to map a <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="codeph:5">TableColumn</codeph>
           to a POJO's property.
           <codeblock spectitle="YAML" xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="codeblock:5">
JPanel:
    - JTable(name=list1): 
        - EventTableModel(name=model,source=values)
        - TableColumn(name=column1,source=firstName,headerValue=column.firstName)
        - TableColumn(name=column2,source=lastName,headerValue=column.lastName)           
    - JTable(name=list2): 
        - EventTableModel(name=model,source=values)
        - TableColumn(name=column3,source=firstName,headerValue=column.firstName)
        - TableColumn(name=column4,source=lastName,headerValue=column.lastName)           
           </codeblock>
           In the sample above, two different tables display the same POJO data by using the optional <codeph class="+ topic/ph pr-d/codeph " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="codeph:6">"source"</codeph> to 
           avoid name clashes on <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="apiname:14">TableColumn.name</apiname>.
           </p>
       </section>
       <section class="- topic/section " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="section:5">
            <title class="- topic/title " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="title:6">Sorting</title>
            <p class="- topic/p " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="p:6">
            In order to enable sorting, you have to add the <apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="apiname:15">sort</apiname> property, which has two allowed values:
            <ul class="- topic/ul " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="ul:1">
                <li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="li:4"><apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="apiname:16">single</apiname> - sorts by single column only</li>
                <li class="- topic/li " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="li:5"><apiname class="+ topic/keyword pr-d/apiname " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="apiname:17">multi</apiname> - allows sorting by multiple columns</li>
            </ul>
            Sorting is activated by the user clicking with the mouse on the column headers.
            <codeblock xml:space="preserve" class="+ topic/pre pr-d/codeblock " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing/glazed_lists.jtable.dita" xtrc="codeblock:6">
JPanel:
    - JTable(name=list): 
        - EventTableModel(name=model,source=values,columns=[firstName,lastName],sort=multi)
            </codeblock>
            </p>
       </section>
	</body>
<related-links class="- topic/related-links "><linkpool class="- topic/linkpool " xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" xtrc="topicref:7" mapkeyref="swing.javabuilder"><link class="- topic/link " mapclass="- map/topicref bookmap/chapter " rev="1.0.DEV" type="" xtrc="chapter:8" xtrf="/media/My Passport/Jacek/Dev/javabuilders/org.javabuilders.docs/javabuilders/swing.javabuilder.ditamap" href="../swing/glazed_lists.xml" role="parent"/></linkpool></related-links>
</topic>