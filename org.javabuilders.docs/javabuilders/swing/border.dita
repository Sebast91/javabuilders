<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="id20090107105532" xml:lang="en-CA">
	<title>Borders</title>
	<prolog>
		<author>Jacek Furmankiewicz</author>
	</prolog>
	<body>
		<section>
			<title>Regular Borders</title>
			<p>
				Any Swing component that allows setting of borders can do it by
				using a set of pre-defined constants:
				<ul>
					<li>
						<apiname>loweredBevel</apiname>
					</li>
					<li>
						<apiname>raisedBevel</apiname>
					</li>
					<li>
						<apiname>loweredEtched</apiname>
					</li>
					<li>
						<apiname>raisedEtched</apiname>
					</li>
				</ul>
				<codeblock>
JPanel(name=panel1, border=raisedBevel)
			</codeblock>
			</p>
		</section>
		<section>
			<title>Color and Line borders</title>
			<p>
				Borders can also be specified using just a line width or a Color /
				line width combination:
				<codeblock>
- JPanel(name=panel1, border=3)
- JPanel(name=panel1, border=olive 3)
- JPanel(name=panel1, border=ff00ee 3)
		</codeblock>
			</p>
		</section>
		<section>
			<title>Titled Border</title>
			<p>
				A titled border is a special case, since it has a text associated
				with it. In this case, there is a special property that will
				automatically create a TitledBorder and put the proper text in it,
				namely
				<apiname>groupTitle</apiname>
				:
				<codeblock>
JPanel(name=groupBox1, groupTitle=Customer Data):
    content:
        - JLabel(name=nameLabel, text="Customer name:")
        - JText(name=nameField)			
		</codeblock>
				<note>
					<p>
						<apiname>groupTitle</apiname>
						is internationalizable, so you can pass a resource key to it,
						instead of a hard-coded String.
					</p>
				</note>
			</p>
		</section>
	</body>
</topic>